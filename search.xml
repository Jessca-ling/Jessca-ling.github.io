<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript进阶</title>
      <link href="/2022/04/01/JavaScrip%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/04/01/JavaScrip%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="2022-4-1"><a href="#2022-4-1" class="headerlink" title="2022.4.1"></a>2022.4.1</h2><p>· JS的组成：<a href="https://imgtu.com/i/q5MTAA"><img src="https://s1.ax1x.com/2022/04/01/q5MTAA.png" alt="q5MTAA.png"></a></p><p>· API（应用程序编程接口）：简单理解就是，给程序员提供的一种工具，以便能更轻松的实现想要完成的功能。</p><p>· Web API：是<strong>浏览器</strong>提供的一套操作<strong>浏览器功能</strong>和<strong>页面元素</strong>的API。</p><p>?    MDN:<a href="https://developer.mozilla.org/zh-CN/docs/Web/API">https://developer.mozilla.org/zh-CN/docs/Web/API</a></p><p>· 获取元素：1.根据ID获取：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.getElementById(id);<span class="comment">//没有s，element</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5MHht"><img src="https://s1.ax1x.com/2022/04/01/q5MHht.png" alt="q5MHht.png"></a></p><p>2.根据标签名获取：返回对象的集合，<strong>所以想要操作里面的元素就需要遍历；得到元素对象是动态的</strong>；<em>父元素必须是单个对象（必须指明是哪一个元素对象），获取的时候不包括父元素自己。</em></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.getElemensByTagName(<span class="string">&#x27;标签名&#x27;</span>);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5MOc8"><img src="https://s1.ax1x.com/2022/04/01/q5MOc8.png" alt="q5MOc8.png"></a></p><p>3.通过HTML5新增的方法获取：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.getElemensByClassName(<span class="string">&#x27;类名&#x27;</span>);<span class="comment">//根据类名返回元素对象集合</span></span><br><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.querySelector(<span class="string">&#x27;选择器&#x27;</span>);<span class="comment">//根据指定选择器返回第一个元素对象</span></span><br><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;选择器&#x27;</span>);<span class="comment">//根据指定选择器返回所有元素对象集合</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5Mq9P"><img src="https://s1.ax1x.com/2022/04/01/q5Mq9P.png" alt="q5Mq9P.png"></a></p><p>4.特殊元素获取（body，html）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> element=doucument.body;<span class="comment">//返回body元素对象</span></span><br><span class="line"><span class="keyword">var</span> element=<span class="built_in">document</span>.documentElement;<span class="comment">//返回html元素对象</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5MI7d"><img src="https://s1.ax1x.com/2022/04/01/q5MI7d.png" alt="q5MI7d.png"></a></p><p>· 事件三要素：（事件：触发—响应机制）</p><p>?    （1）事件源：事件被触发的对象，谁  按钮</p><p>?    （2）事件类型：如何触发，什么事件，比如鼠标点击（onckick），还是鼠标经过，还是键盘按下</p><p>?    （3）事件处理程序：通过一个函数赋值的方式，完成</p><p>· 执行事件过程：（1）获取事件源，（2）绑定事件，注册事件，（3）添加事件处理程序<a href="https://imgtu.com/i/q5ML1f"><img src="https://s1.ax1x.com/2022/04/01/q5ML1f.png" alt="q5ML1f.png"></a></p><p>· 操作元素：（1）修改元素内容：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">element.innerText=名;<span class="comment">//从起始位置到终止位置的内容，但它去除html标签，同时空格和换行也会去掉，不识别html，非标准</span></span><br><span class="line">element.innerHTML=名;<span class="comment">//起始位置到终止位置的全部内容，包括HTML标签，同时保留空格和换行，W3C标准</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5MXjS"><img src="https://s1.ax1x.com/2022/04/01/q5MXjS.png" alt="q5MXjS.png"></a></p><p>（2）修改元素属性：src、href、id、alt、title<a href="https://imgtu.com/i/q5Mvng"><img src="https://s1.ax1x.com/2022/04/01/q5Mvng.png" alt="q5Mvng.png"></a></p><p>（3）修改表单属性：type、value、checked、selected、disabled<a href="https://imgtu.com/i/q5MxBQ"><img src="https://s1.ax1x.com/2022/04/01/q5MxBQ.png" alt="q5MxBQ.png"></a></p><p>（4）修改样式属性： <em>1.js里面的样式采取驼峰命名法；js修改style央视操作，产生的行内样式，css权重比较高</em></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">element,style=;<span class="comment">//行内样式</span></span><br><span class="line">element.className=;<span class="comment">//类名样式</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q5Mz7j"><img src="https://s1.ax1x.com/2022/04/01/q5Mz7j.png" alt="q5Mz7j.png"></a></p><p><a href="https://imgtu.com/i/q5Q9Nn"><img src="https://s1.ax1x.com/2022/04/01/q5Q9Nn.png" alt="q5Q9Nn.png"></a></p><p>·     显示隐藏文本框内容：获得焦点onfocus、失去焦点onblur                                                                                                                                                                                                                                                                </p><p><a href="https://imgtu.com/i/q5QpAs"><img src="https://s1.ax1x.com/2022/04/01/q5QpAs.png" alt="q5QpAs.png"></a></p><h2 id="2022-4-2"><a href="#2022-4-2" class="headerlink" title="2022.4.2"></a>2022.4.2</h2><p>· 排他思想：如果有同一组元素，我们要某一个元素实现某种样式，需要用到循环的排他思想算法：（1）所有元素全部清除样式（干掉其他人）（2）给当前元素设置样式（留下我自己）（3）注意顺序不能颠倒！<a href="https://imgtu.com/i/qHp7HP"><img src="https://s1.ax1x.com/2022/04/03/qHp7HP.png" alt="qHp7HP.png"></a></p><p>· 表格隔行变色：鼠标经过事件onmouseover   鼠标离开事件onmouseout<a href="https://imgtu.com/i/qHpTBt"><img src="https://s1.ax1x.com/2022/04/03/qHpTBt.png" alt="qHpTBt.png"></a></p><p>· 表单全选和取消全选：<a href="https://imgtu.com/i/qHp5jA"><img src="https://s1.ax1x.com/2022/04/03/qHp5jA.png" alt="qHp5jA.png"></a></p><h2 id="2022-4-3"><a href="#2022-4-3" class="headerlink" title="2022.4.3"></a>2022.4.3</h2><p>· 获得元素（自定义）的属性值：（1）element.属性名；获取内置属性值（元素本身自带的属性）（2）element.getAttribute(‘属性’)；主要获得自定义的属性（标准）我们程序员自定义的属性<a href="https://imgtu.com/i/qq03WR"><img src="https://s1.ax1x.com/2022/04/04/qq03WR.png" alt="qq03WR.png"></a></p><p>· 设置自定义属性值：（1）element.属性=’值’;设置内置属性值（2）element.setAttribute(‘属性’,’值’);主要设置自定义是属性（标准）<a href="https://imgtu.com/i/qq01Y9"><img src="https://s1.ax1x.com/2022/04/04/qq01Y9.png" alt="qq01Y9.png"></a>· 移除自定义属性值：removeAttribute(‘属性’)</p><p>·<strong>tab栏切换布局分析</strong><a href="https://imgtu.com/i/qq0lFJ"><img src="https://s1.ax1x.com/2022/04/04/qq0lFJ.png" alt="qq0lFJ.png"></a></p><p>· H5自定义属性：data-开头作为属性名并且赋值（1）兼容性获取：element.getAttribute(‘data-index’);</p><p>(2)H5新增：element.dataset.index或者element.dataset[‘index’] <em>ie11才开始支持</em><a href="https://imgtu.com/i/qq0JQx"><img src="https://s1.ax1x.com/2022/04/04/qq0JQx.png" alt="qq0JQx.png"></a></p><p><a href="https://imgtu.com/i/qq0GS1"><img src="https://s1.ax1x.com/2022/04/04/qq0GS1.png" alt="qq0GS1.png"></a></p><h2 id="2022-4-4"><a href="#2022-4-4" class="headerlink" title="2022.4.4"></a>2022.4.4</h2><p>· 节点：网页中的所有内容都是节点（标签，属性，文本，注释等），在DOM中，节点使用<strong>node</strong>来表示</p><p>?    -》    优点：利用节点层级关系获取元素，逻辑关系更强，操作更简便，但兼容性稍差</p><p>?    -》基本类型：nodeType（节点类型），nodeName（节点名称），nodeValue（节点值）；<a href="https://imgtu.com/i/qOXXLR"><img src="https://s1.ax1x.com/2022/04/05/qOXXLR.png" alt="qOXXLR.png"></a></p><p>· 节点操作：（1）父节点操作：<strong>node.parentNode</strong>;parentNode属性可返回某节点的父节点，注意是最近的一个父节点；如果指定的节点没有父节点则返回null<a href="https://imgtu.com/i/qOXxdx"><img src="https://s1.ax1x.com/2022/04/05/qOXxdx.png" alt="qOXxdx.png"></a></p><p>（2）子节点操作：<strong>parentNode.childNodes</strong>（标准）;返回包含指定节点的子节点的集合，该集合为即时更新的集合；<a href="https://imgtu.com/i/qOXve1"><img src="https://s1.ax1x.com/2022/04/05/qOXve1.png" alt="qOXve1.png"></a></p><p><strong>parentNode.children</strong>(非标准)；是一个只读属性，返回所有的子元素节点;它只返回子元素节点，其余节点不返回（<strong>重点</strong>);虽然是非标准，但兼容性好，可放心使用</p><h2 id="2022-4-5"><a href="#2022-4-5" class="headerlink" title="2022.4.5"></a>2022.4.5</h2><p>（3）第一个子节点：<strong>parentNode.firstChild</strong></p><p>返回第一个子节点，找不到则返回null，也是包括所有的节点。</p><p><strong>parentNode.firstElementChild</strong></p><p>返回第一个子元素节点，找不到则返回null</p><p>（4）最后一个子节点：<strong>parentNode.lastChild</strong></p><p>返回最后一个子节点，找不到则返回null，也是包括所有的节点（ie9以上才支持）</p><p><strong>parentNode.lastElementChild</strong></p><p>返回最后一个子元素节点，找不到则返回null（ie9以上才支持）<a href="https://imgtu.com/i/qXAnk4"><img src="https://s1.ax1x.com/2022/04/05/qXAnk4.png" alt="qXAnk4.png"></a></p><p>· 兄弟节点：</p><p>（1）<strong>node.nextSibling</strong></p><p>返回当前元素的下一个兄弟节点，找不到则返回null，也是包含所有的节点</p><p>（2）<strong>node.previousSibling</strong></p><p>返回当前元素的下一个兄弟节点，找不到则返回null，也是包含所有的节点</p><p>（3）<strong>node.nextElementSibling</strong></p><p>返回当前元素的下一个兄弟节点，找不到则返回null，ie9以上支持</p><p>（4）<strong>node.previousElementSibling</strong></p><p>返回当前元素的下一个兄弟节点，找不到则返回null,ie9以上支持</p><p>· 创建节点：<strong>document.createElement(‘tagName’)</strong></p><p>由tagName指定的HTML元素，因为这些元素原先不存在，是根据我们的需求动态生成的，称为<strong>动态创建元素节点</strong></p><p>· 添加节点：（1）<strong>node.appendChild(child)</strong></p><p>方法将一个节点添加到指定父节点的子节点列表末尾，类似于css里的after伪元素</p><p>（2）<strong>node.insertBefore(child,指定元素)</strong></p><p>方法将一个节点添加到父节点的指定子节点前面，类似css里的before伪元素<a href="https://imgtu.com/i/qXAe7F"><img src="https://s1.ax1x.com/2022/04/05/qXAe7F.png" alt="qXAe7F.png"></a></p><p>· 删除节点：<strong>node.removeChild(child)</strong></p><p>方法从DOM中删除一个子节点，返回删除的节点。</p><p><a href="https://imgtu.com/i/qXAZ0U"><img src="https://s1.ax1x.com/2022/04/05/qXAZ0U.png" alt="qXAZ0U.png"></a></p><h2 id="2022-4-6"><a href="#2022-4-6" class="headerlink" title="2022.4.6"></a>2022.4.6</h2><p>· 复制节点（克隆节点）：**node.cloneNode()**方法返回调用该方法的节点的一个副本<a href="https://imgtu.com/i/qvTwWQ"><img src="https://s1.ax1x.com/2022/04/06/qvTwWQ.png" alt="qvTwWQ.png"></a></p><p>· 了解：<a href="https://imgtu.com/i/qvTdJg"><img src="https://s1.ax1x.com/2022/04/06/qvTdJg.png" alt="qvTdJg.png"></a></p><p>· DOM（文档对象模型）：是W3C组织推荐的处理可扩展标记语言的编程接口。（总结之前创建，增删改查，属性操作，事件操作）</p><p>· 注册事件（绑定事件）：给元素添加事件。俩种方式：传统方式、方法监听注册方式。<a href="https://imgtu.com/i/qvTNo8"><img src="https://s1.ax1x.com/2022/04/06/qvTNo8.png" alt="qvTNo8.png"></a><a href="https://imgtu.com/i/qvTaFS"><img src="https://s1.ax1x.com/2022/04/06/qvTaFS.png" alt="qvTaFS.png"></a><a href="https://imgtu.com/i/qvT0zj"><img src="https://s1.ax1x.com/2022/04/06/qvT0zj.png" alt="qvT0zj.png"></a></p><p>· attachEvent事件监听方式：<a href="https://imgtu.com/i/qvTDQs"><img src="https://s1.ax1x.com/2022/04/06/qvTDQs.png" alt="qvTDQs.png"></a></p><p><a href="https://imgtu.com/i/qvTryn"><img src="https://s1.ax1x.com/2022/04/06/qvTryn.png" alt="qvTryn.png"></a></p><h2 id="2022-4-7"><a href="#2022-4-7" class="headerlink" title="2022.4.7"></a>2022.4.7</h2><p>· 删除事件（解绑事件）：1.传统方式：<strong>eventTarget.onclick=null;</strong></p><p>2.方法监听注册方法：<strong>①eventTarget.removeEventListener(type,listerner[,useCapture]);</strong></p><p><strong>②eventTarget.datachEvent(eventNameWithOn,callback);</strong><a href="https://imgtu.com/i/LpXd4s"><img src="https://s1.ax1x.com/2022/04/08/LpXd4s.png" alt="LpXd4s.png"></a></p><p>· DOM事件流：其描述的是从页面中接收事件的顺序；事件发生时会在元素节点之间按照特定的顺序传播。<a href="https://imgtu.com/i/LpXaNj"><img src="https://s1.ax1x.com/2022/04/08/LpXaNj.png" alt="LpXaNj.png"></a></p><p>-》三个阶段：1.捕获阶段；2.当前目标阶段；3.冒泡阶段<a href="https://imgtu.com/i/LpXUEQ"><img src="https://s1.ax1x.com/2022/04/08/LpXUEQ.png" alt="LpXUEQ.png"></a></p><p>· 事件对象：event对象代表事件的状态，如键盘按键的状态，鼠标垫位置，鼠标按钮的状态。即事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象event<a href="https://imgtu.com/i/LpXB3q"><img src="https://s1.ax1x.com/2022/04/08/LpXB3q.png" alt="LpXB3q.png"></a></p><p>· 事件对象的常见属性和方法：<a href="https://imgtu.com/i/LpXDg0"><img src="https://s1.ax1x.com/2022/04/08/LpXDg0.png" alt="LpXDg0.png"></a></p><p>· target和this的区别：<a href="https://imgtu.com/i/LpXyuT"><img src="https://s1.ax1x.com/2022/04/08/LpXyuT.png" alt="LpXyuT.png"></a></p><p>· 默认阻止行为：<a href="https://imgtu.com/i/LpXRUJ"><img src="https://s1.ax1x.com/2022/04/08/LpXRUJ.png" alt="LpXRUJ.png"></a></p><p>· 阻止事件冒泡：①标准写法：利用事件对象里面的stopPropagation() <strong>e.stopPropagation()</strong></p><p>②非标准写法：IE678 利用事件对象cancelBubble属性<a href="https://imgtu.com/i/LpX6DU"><img src="https://s1.ax1x.com/2022/04/08/LpX6DU.png" alt="LpX6DU.png"></a></p><p>· 事件委托（事件代理）：<strong>不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置每个子节点。（面试会问）</strong>作用是只操作一次DOM，提高了程序的性能。<a href="https://imgtu.com/i/LpX2E4"><img src="https://s1.ax1x.com/2022/04/08/LpX2E4.png" alt="LpX2E4.png"></a></p><p>· 常用鼠标事件：<a href="https://imgtu.com/i/LpXcbF"><img src="https://s1.ax1x.com/2022/04/08/LpXcbF.png" alt="LpXcbF.png"></a><a href="https://imgtu.com/i/LpX5gx"><img src="https://s1.ax1x.com/2022/04/08/LpX5gx.png" alt="LpX5gx.png"></a></p><p>· 禁止选中文字和禁止鼠标右键菜单：<a href="https://imgtu.com/i/LpXW59"><img src="https://s1.ax1x.com/2022/04/08/LpXW59.png" alt="LpXW59.png"></a></p><p>· 获得鼠标在页面的坐标：<a href="https://imgtu.com/i/LpX0Cn"><img src="https://s1.ax1x.com/2022/04/08/LpX0Cn.jpg" alt="LpX0Cn.jpg"></a></p><p>· 常用键盘事件：<a href="https://imgtu.com/i/LpXhCR"><img src="https://s1.ax1x.com/2022/04/08/LpXhCR.png" alt="LpXhCR.png"></a></p><p>· keyCode判断用户按下了哪个键：<a href="https://imgtu.com/i/LpX481"><img src="https://s1.ax1x.com/2022/04/08/LpX481.png" alt="LpX481.png"></a><a href="https://imgtu.com/i/LpXIv6"><img src="https://s1.ax1x.com/2022/04/08/LpXIv6.png" alt="LpXIv6.png"></a></p><p>· BOM（浏览器对象模型）：它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是window。window对象是浏览器的顶级对象，它具有双重角色（接口、全局对象）。<a href="https://imgtu.com/i/LpXTKK"><img src="https://s1.ax1x.com/2022/04/08/LpXTKK.png" alt="LpXTKK.png"></a></p><h2 id="2022-4-8"><a href="#2022-4-8" class="headerlink" title="2022.4.8"></a>2022.4.8</h2><p>· 页面（窗口）加载事件：当文档内容完全加载完成会触发该事件（包括图像、脚本文件、CSS、文件等），就调用的处理函数。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;load&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/L9xiW9"><img src="https://s1.ax1x.com/2022/04/08/L9xiW9.png" alt="L9xiW9.png"></a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/L9xFzR"><img src="https://s1.ax1x.com/2022/04/08/L9xFzR.png" alt="L9xFzR.png"></a></p><p>· 调整窗口大小事件：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onresize=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/L9xPJJ"><img src="https://s1.ax1x.com/2022/04/08/L9xPJJ.png" alt="L9xPJJ.png"></a></p><p>· 定时器：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.setTimeout(调用函数,延时时间的毫秒数);</span><br><span class="line"><span class="built_in">window</span>.setInterval();同上</span><br></pre></td></tr></table></figure><p> <a href="https://imgtu.com/i/L9xCi4"><img src="https://s1.ax1x.com/2022/04/08/L9xCi4.png" alt="L9xCi4.png"></a><a href="https://imgtu.com/i/L9xEsx"><img src="https://s1.ax1x.com/2022/04/08/L9xEsx.png" alt="L9xEsx.png"></a>[<img src="https://s1.ax1x.com/2022/04/08/L9xVL6.png" alt="L9xVL6.png"><a href="https://imgtu.com/i/L9xAQ1"><img src="https://s1.ax1x.com/2022/04/08/L9xAQ1.png" alt="L9xAQ1.png"></a>](<a href="https://imgtu.com/i/L9xVL6">https://imgtu.com/i/L9xVL6</a>)</p><p>· **setTimeout()**回调函数：</p><p>· 停止setTimeout()定时器：   </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.clearTimeout(timeoutID)<span class="comment">//win可省略，括号里是定时器标识符</span></span><br></pre></td></tr></table></figure><p>· 清除setIterval()定时器：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.clearInterval(intervalID);<span class="comment">//win可省，括号里是定时器标识符</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/L9xmdO"><img src="https://s1.ax1x.com/2022/04/08/L9xmdO.png" alt="L9xmdO.png"></a></p><p>· <strong>this指向问题：</strong>this的指向在函数定义的时候是确定不了的，只有函数执行的时候才能确定this指向谁，一般this的最终指向的是那个调用它的对象</p><p>?    1.全局作用域或者普通函数中this指向全局对象window（注意定时器里的this指向window）</p><p>?    2.方法调用中谁调用this，就指向那个调用它的对象</p><p>?    3.构造函数中this指向构造函数的实例</p><p>· JS执行机制 ：（单线程：同一时间只能做一件事）现在可多线程的<a href="https://imgtu.com/i/L9xeeK"><img src="https://s1.ax1x.com/2022/04/08/L9xeeK.png" alt="L9xeeK.png"></a><a href="https://imgtu.com/i/L9xMJH"><img src="https://s1.ax1x.com/2022/04/08/L9xMJH.png" alt="L9xMJH.png"></a></p><p>-》同步：前一个任务结束后在执行后一个任务，程序的执行顺序与任务的排序顺序是一致的、同步的。</p><p>-》异步：在做这件事的同时，还可以处理其他事情。<a href="https://imgtu.com/i/L9xnoD"><img src="https://s1.ax1x.com/2022/04/08/L9xnoD.png" alt="L9xnoD.png"></a></p><p>· location对象：window对象给我们提供一个location属性用于获取或设置窗体的URL，并且可以用于解析URL，这个属性返回的一个对象就是location对象。</p><p>属性和方法：<a href="https://imgtu.com/i/L9xKFe"><img src="https://s1.ax1x.com/2022/04/08/L9xKFe.png" alt="L9xKFe.png"></a><a href="https://imgtu.com/i/L9x3QI"><img src="https://s1.ax1x.com/2022/04/08/L9x3QI.png" alt="L9x3QI.png"></a></p><p>·URL:统一资源定位符是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL。<a href="https://imgtu.com/i/L9xQWd"><img src="https://s1.ax1x.com/2022/04/08/L9xQWd.png" alt="L9xQWd.png"></a></p><p>· navigator对象：其包含有关浏览器的信息，可判断用户要用哪个终端打开页面，实现跳转</p><p>· history对象：与浏览器历史记录进行交互，该对象包含用户（在浏览器窗口中）访问过的URL。<a href="https://imgtu.com/i/L9x1SA"><img src="https://s1.ax1x.com/2022/04/08/L9x1SA.png" alt="L9x1SA.png"></a></p><p>· 元素偏移量offset：可以动态获得该元素的位置（偏移），大小等。<a href="https://imgtu.com/i/L9x8yt"><img src="https://s1.ax1x.com/2022/04/08/L9x8yt.png" alt="L9x8yt.png"></a></p><p><a href="https://imgtu.com/i/L9xGOP"><img src="https://s1.ax1x.com/2022/04/08/L9xGOP.png" alt="L9xGOP.png"></a></p><p>· offset与style区别：<a href="https://imgtu.com/i/LPWr1e"><img src="https://s1.ax1x.com/2022/04/09/LPWr1e.png" alt="LPWr1e.png"></a></p><p>· 元素可视区client（客户端）系列：用相关属性来获取元素可视区的相关信息，还可以动态获得该元素的边框大小、元素大小等。<a href="https://imgtu.com/i/LPW0fO"><img src="https://s1.ax1x.com/2022/04/09/LPW0fO.png" alt="LPW0fO.png"></a></p><p>· 立即执行函数：不需要调用，立马能够自己执行的函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;());</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/LPWs6H"><img src="https://s1.ax1x.com/2022/04/09/LPWs6H.png" alt="LPWs6H.png"></a></p><p>· 元素scroll（滚动的）系列属性：可以动态得到该元素的大小、滚动距离等<a href="https://imgtu.com/i/LPWwtK"><img src="https://s1.ax1x.com/2022/04/09/LPWwtK.png" alt="LPWwtK.png"></a><a href="https://imgtu.com/i/LPWDpD"><img src="https://s1.ax1x.com/2022/04/09/LPWDpD.png" alt="LPWDpD.png"></a></p><p>· <strong>三大系列总结</strong>：<a href="https://imgtu.com/i/LPW27t"><img src="https://s1.ax1x.com/2022/04/09/LPW27t.png" alt="LPW27t.png"></a></p><p><a href="https://imgtu.com/i/LPWcnA"><img src="https://s1.ax1x.com/2022/04/09/LPWcnA.png" alt="LPWcnA.png"></a></p><p>· mouseenter和mouseover的区别：<a href="https://imgtu.com/i/LPWg0I"><img src="https://s1.ax1x.com/2022/04/09/LPWg0I.png" alt="LPWg0I.png"></a></p><p>· 动画实现原理：<strong>核心原理：通过定时器setInterval()不断移动盒子位置</strong></p><p>?    1.获取盒子当前位置</p><p>?    2.让盒子在当前位置加上1个移动距离</p><p>?    3.利用定时器不断重复这个操作</p><p>?    4.加一个结束定时器的条件</p><p>?    5.注意此元素需要添加定位，才能使用element.style.left<a href="https://imgtu.com/i/LPWftf"><img src="https://s1.ax1x.com/2022/04/09/LPWftf.png" alt="LPWftf.png"></a></p><p>· 简单动画函数封装：需要传递2个参数，动画对象和移动到的距离<a href="https://imgtu.com/i/LPWWAP"><img src="https://s1.ax1x.com/2022/04/09/LPWWAP.png" alt="LPWWAP.png"></a></p><p>· 动画函数-给不同对象添加不同定时器：当我们不断的点击按钮，这个元素的速度会越来越快，因为开启了太多的定时器；<strong>解决</strong>:r让我们元素只有一个定时器执行，先清除以前的定时器，只保留当前的一个定时器执行</p><p>· 缓慢（让元素运动速度有所变化）动画原理：</p><p>?    1.让盒子每次移动的距离慢慢变小，速度就会慢慢落下来</p><p>?    2.<strong>核心算法</strong>（目标值-现在的位置）/10，作每次移动的距离步长</p><p>?    3.停止的条件：让当前位置等于目标位置就停止定时器</p><p>?     4.<strong>注意步长值需要取整</strong><a href="https://imgtu.com/i/LPW59S"><img src="https://s1.ax1x.com/2022/04/09/LPW59S.png" alt="LPW59S.png"></a></p><p>· 动画函数添加回调函数：（回调函数原理：函数可以作为一个参数，将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程叫回调）</p><p>· 动画函数封装到单独JS文件里：</p><p>1.单独新建一个JS文件；2.引用JS文件；3.写相关属性</p><p>· 节流阀：防止轮播图按钮连续点击造成播放过快。<a href="https://imgtu.com/i/LPWhh8"><img src="https://s1.ax1x.com/2022/04/09/LPWhh8.png" alt="LPWhh8.png"></a><a href="https://imgtu.com/i/LPWocQ"><img src="https://s1.ax1x.com/2022/04/09/LPWocQ.png" alt="LPWocQ.png"></a></p><p>· 移动端touch（触屏）事件：touch对象代表一个触摸点<a href="https://imgtu.com/i/LPWI1g"><img src="https://s1.ax1x.com/2022/04/09/LPWI1g.png" alt="LPWI1g.png"></a></p><p>· 触摸事件对象（TouchEvent）：<a href="https://imgtu.com/i/LPWTXj"><img src="https://s1.ax1x.com/2022/04/09/LPWTXj.png" alt="LPWTXj.png"></a><a href="https://imgtu.com/i/LPWOA0"><img src="https://s1.ax1x.com/2022/04/09/LPWOA0.png" alt="LPWOA0.png"></a></p><p>· 移动端拖动元素：<a href="https://imgtu.com/i/LPWbBn"><img src="https://s1.ax1x.com/2022/04/09/LPWbBn.png" alt="LPWbBn.png"></a><a href="https://imgtu.com/i/LPWHns"><img src="https://s1.ax1x.com/2022/04/09/LPWHns.png" alt="LPWHns.png"></a></p><p>· click延时解决方案：<a href="https://imgtu.com/i/LPWXNV"><img src="https://s1.ax1x.com/2022/04/09/LPWXNV.png" alt="LPWXNV.png"></a></p><p>· fastclick插件：（JS插件就是JS文件）可解决300ms延迟。GIthub官网：<a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a></p><p>· Swiper轮播图插件：<a href="https://www/swiper.com.cn/">https://www/swiper.com.cn/</a></p><p>?    1.引用相关文件；2.按照语法规范使用<a href="https://imgtu.com/i/LPWq7q"><img src="https://s1.ax1x.com/2022/04/09/LPWq7q.png" alt="LPWq7q.png"></a></p><p>· 其他移动端常见插件：</p><p>?    superslide：<a href="http://www.superslide2.com/">http://www.superslide2.com/</a></p><p>?    iscroll： <a href="https://github.com/cubiq/iscroll">https://github.com/cubiq/iscroll</a></p><p>· 本地存储：<a href="https://imgtu.com/i/LPfSc4"><img src="https://s1.ax1x.com/2022/04/09/LPfSc4.png" alt="LPfSc4.png"></a></p><p>（1）<strong>window.sessionStorage</strong><a href="https://imgtu.com/i/LPfpjJ"><img src="https://s1.ax1x.com/2022/04/09/LPfpjJ.png" alt="LPfpjJ.png"></a></p><p>（2）<strong>window.localStorage</strong></p><p><a href="https://imgtu.com/i/LPfCu9"><img src="https://s1.ax1x.com/2022/04/09/LPfCu9.png" alt="LPfCu9.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础</title>
      <link href="/2022/03/23/JavaScrip%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/03/23/JavaScrip%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="2022-3-23"><a href="#2022-3-23" class="headerlink" title="2022.3.23"></a>2022.3.23</h2><p>· JavaScript是一种运行在客户端的脚本语言（不需要编译，运行过程中由js解释器逐行来进行解释并执行），即可做前台，也可做后台。</p><p>· JavaScript的作用：</p><p><a href="https://imgtu.com/i/q8KLIs"><img src="https://s1.ax1x.com/2022/03/24/q8KLIs.png" alt="q8KLIs.png"></a></p><p>· 浏览器执行JS的过程：</p><p><a href="https://imgtu.com/i/q8KvR0"><img src="https://s1.ax1x.com/2022/03/24/q8KvR0.png" alt="q8KvR0.png"></a></p><p>· JS的组成：</p><p><a href="https://imgtu.com/i/q8KXin"><img src="https://s1.ax1x.com/2022/03/24/q8KXin.png" alt="q8KXin.png"></a></p><p>?    · ECMAScript规定了JS的编程语法和基础核心知识</p><p>?    · DOM——文档对象模型</p><p>?    · BOM——浏览器对象模型</p><p>· JS的三种书写位置：1.行内式的js，直接写到元素的内部；</p><p><a href="https://imgtu.com/i/q8KjGq"><img src="https://s1.ax1x.com/2022/03/24/q8KjGq.png" alt="q8KjGq.png"></a></p><p>?    2.内嵌式的js；</p><p><a href="https://imgtu.com/i/q8Kqaj"><img src="https://s1.ax1x.com/2022/03/24/q8Kqaj.png" alt="q8Kqaj.png"></a></p><p>?    3.外部js，script双标签</p><p><a href="https://imgtu.com/i/q8MPZ4"><img src="https://s1.ax1x.com/2022/03/24/q8MPZ4.png" alt="q8MPZ4.png"></a></p><p>· 注释：</p><p><a href="https://imgtu.com/i/q8MpsU"><img src="https://s1.ax1x.com/2022/03/24/q8MpsU.png" alt="q8MpsU.png"></a></p><p>· 输入输出语句：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">prompt(<span class="string">&#x27;输入框&#x27;</span>);</span><br><span class="line">alert(<span class="string">&#x27;弹出警示框，输出的，展示给用户的&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;console控制台输出，程序员调试用的&#x27;</span>);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q8M9LF"><img src="https://s1.ax1x.com/2022/03/24/q8M9LF.png" alt="q8M9LF.png"></a></p><p>· 变量：一个存储数据的容器；本质是程序在内存中申请的一块用来存放数据的空间。使用：1.声明变量；2.赋值。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名;<span class="comment">//声明变量</span></span><br><span class="line">变量名=数值;<span class="comment">//赋值</span></span><br><span class="line"><span class="keyword">var</span> 变量名=<span class="string">&#x27;字 值&#x27;</span>;</span><br></pre></td></tr></table></figure><p>（1）更新变量：一个变量被重新赋值后，他原来的值就会被覆盖，变量值将以最后一次的值为准</p><p>（2）同时声明多个变量：同时声明多个变量时，只需要写一个var，多个变量名之间用英文逗号隔开</p><p>（3）特殊情况：</p><p><a href="https://imgtu.com/i/q8MidJ"><img src="https://s1.ax1x.com/2022/03/24/q8MidJ.png" alt="q8MidJ.png"></a></p><h2 id="2022-3-24"><a href="#2022-3-24" class="headerlink" title="2022.3.24"></a>2022.3.24</h2><p>· 变量命名规则：尽量不要直接用name作变量名</p><p><a href="https://imgtu.com/i/qJycwD"><img src="https://s1.ax1x.com/2022/03/24/qJycwD.png" alt="qJycwD.png"></a></p><p>· 数据类型：</p><p><a href="https://imgtu.com/i/qJygTe"><img src="https://s1.ax1x.com/2022/03/24/qJygTe.png" alt="qJygTe.png"></a></p><p>1.简单数据类型：①·<em>数字型进制：八进制前加0，十六进制前加0x。</em></p><p><a href="https://imgtu.com/i/qJy6eO"><img src="https://s1.ax1x.com/2022/03/24/qJy6eO.png" alt="qJy6eO.png"></a></p><p>②.字符串型String：</p><p><a href="https://imgtu.com/i/qJyry6"><img src="https://s1.ax1x.com/2022/03/24/qJyry6.png" alt="qJyry6.png"></a></p><p><a href="https://imgtu.com/i/qJysOK"><img src="https://s1.ax1x.com/2022/03/24/qJysOK.png" alt="qJysOK.png"></a></p><p><a href="https://imgtu.com/i/qJyRFH"><img src="https://s1.ax1x.com/2022/03/24/qJyRFH.png" alt="qJyRFH.png"></a></p><p><a href="https://imgtu.com/i/qJy5lt"><img src="https://s1.ax1x.com/2022/03/24/qJy5lt.png" alt="qJy5lt.png"></a></p><p><a href="https://imgtu.com/i/qJy7m8"><img src="https://s1.ax1x.com/2022/03/24/qJy7m8.png" alt="qJy7m8.png"></a></p><p>③布尔型：true=1；false=0</p><p>④一个声明后没有被赋值的变量会有一个默认值undefined（如果进行相连或者相加时，注意结果）</p><p>⑤一个声明变量给null值，里面存的值为空</p><p>· typeof检测变量数据类型</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> 变量名);</span><br></pre></td></tr></table></figure><p><strong>prompt 取过来的值是字符型的</strong></p><p>· 数据类型的转换：</p><p>?    1.转换为字符串型：</p><p><a href="https://imgtu.com/i/qJyI6P"><img src="https://s1.ax1x.com/2022/03/24/qJyI6P.png" alt="qJyI6P.png"></a></p><p><a href="https://imgtu.com/i/qJyoOf"><img src="https://s1.ax1x.com/2022/03/24/qJyoOf.png" alt="qJyoOf.png"></a></p><p>?    2.转换为数字型：</p><p><a href="https://imgtu.com/i/qJyOYj"><img src="https://s1.ax1x.com/2022/03/24/qJyOYj.png" alt="qJyOYj.png"></a></p><p><a href="https://imgtu.com/i/qJyLkQ"><img src="https://s1.ax1x.com/2022/03/24/qJyLkQ.png" alt="qJyLkQ.png"></a></p><p><a href="https://imgtu.com/i/qJyXfs"><img src="https://s1.ax1x.com/2022/03/24/qJyXfs.png" alt="qJyXfs.png"></a></p><p>?    3.转换为布尔型：</p><p><a href="https://imgtu.com/i/qJyxlq"><img src="https://s1.ax1x.com/2022/03/24/qJyxlq.png" alt="qJyxlq.png"></a></p><p><a href="https://imgtu.com/i/qJyvpn"><img src="https://s1.ax1x.com/2022/03/24/qJyvpn.png" alt="qJyvpn.png"></a></p><p>· 算术运算符：+ - * / % ，先乘除后加减，有括号先算括号里面的</p><p>· 表达式：由数字、运算符、变量等组成的式子，且有返回值（把右边的值返回给左边）的</p><p>· 前置递增运算符：先自加，后返回值</p><p><a href="https://imgtu.com/i/qJ6SXV"><img src="https://s1.ax1x.com/2022/03/24/qJ6SXV.png" alt="qJ6SXV.png"></a></p><p>· 后置递增运算符：先返回原值，后自加1，<em>大多使用后置递增、递减，并且代码独占一行</em></p><p><a href="https://imgtu.com/i/qJyz60"><img src="https://s1.ax1x.com/2022/03/24/qJyz60.png" alt="qJyz60.png"></a></p><p><strong>单独使用运行结构相同，与其他代码联用时，执行结果会不同</strong></p><h2 id="2022-3-25"><a href="#2022-3-25" class="headerlink" title="2022.3.25"></a>2022.3.25</h2><p>· 比较运算符：俩个数据进行比较，返回一个布尔值。<strong>单等（=）是赋值，双等（==）是判断，三等（===）是全等</strong></p><p><a href="https://imgtu.com/i/qU5UEj"><img src="https://s1.ax1x.com/2022/03/26/qU5UEj.png" alt="qU5UEj.png"></a></p><p>· 逻辑运算符：进行布尔值运算的运算符，返回值也是布尔值<a href="https://imgtu.com/i/qU5tbQ"><img src="https://s1.ax1x.com/2022/03/26/qU5tbQ.png" alt="qU5tbQ.png"></a></p><p>· 逻辑中断（短路）：当多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值。</p><p>?    -》逻辑与：表达式1 &amp;&amp; 表达式2</p><p><a href="https://imgtu.com/i/qU5YDg"><img src="https://s1.ax1x.com/2022/03/26/qU5YDg.png" alt="qU5YDg.png"></a></p><p>?    -》逻辑或：表达式1 || 表达式2<a href="https://imgtu.com/i/qU58v8"><img src="https://s1.ax1x.com/2022/03/26/qU58v8.png" alt="qU58v8.png"></a></p><p><strong>后面是0，则返回0</strong></p><p>· 赋值运算符：</p><p><a href="https://imgtu.com/i/qU5JKS"><img src="https://s1.ax1x.com/2022/03/26/qU5JKS.png" alt="qU5JKS.png"></a></p><p>· 运算符优先级：<a href="https://imgtu.com/i/qU5aUs"><img src="https://s1.ax1x.com/2022/03/26/qU5aUs.png" alt="qU5aUs.png"></a></p><p>· if分支语句：<a href="https://imgtu.com/i/qU5d5n"><img src="https://s1.ax1x.com/2022/03/26/qU5d5n.png" alt="qU5d5n.png"></a></p><p>· if-else语句：<a href="https://imgtu.com/i/qU50Cq"><img src="https://s1.ax1x.com/2022/03/26/qU50Cq.png" alt="qU50Cq.png"></a></p><p>· if-else-if语句：<a href="https://imgtu.com/i/qU5B80"><img src="https://s1.ax1x.com/2022/03/26/qU5B80.png" alt="qU5B80.png"></a></p><p>· 三元表达式：表达式 ？表达式1 ：表达式2</p><p><a href="https://imgtu.com/i/qU5D2V"><img src="https://s1.ax1x.com/2022/03/26/qU5D2V.png" alt="qU5D2V.png"></a></p><h2 id="2022-3-26"><a href="#2022-3-26" class="headerlink" title="2022.3.26"></a>2022.3.26</h2><p>· switch分支语句：<strong>1.开发里面，表达式通常写成变量；</strong></p><p><a href="https://imgtu.com/i/q0QLI1"><img src="https://s1.ax1x.com/2022/03/27/q0QLI1.png" alt="q0QLI1.png"></a></p><p><strong>2.num的值和case里面的值相匹配的时候是全等，必须是值和数据类型一致才可以 num === 1；</strong></p><p><strong>3.break如果当前的case里面没有break，则不会退出switch，会继续执行下一个case</strong></p><p>·<em>switch和if-else-if区别：</em></p><p><a href="https://imgtu.com/i/q0QbZ9"><img src="https://s1.ax1x.com/2022/03/27/q0QbZ9.png" alt="q0QbZ9.png"></a></p><p>· for循环：</p><p><a href="https://imgtu.com/i/q0QqaR"><img src="https://s1.ax1x.com/2022/03/27/q0QqaR.png" alt="q0QqaR.png"></a></p><p><a href="https://imgtu.com/i/q0Q7qJ"><img src="https://s1.ax1x.com/2022/03/27/q0Q7qJ.png" alt="q0Q7qJ.png"></a></p><p>· 断点调试（sources）：</p><p><a href="https://imgtu.com/i/q0QXPx"><img src="https://s1.ax1x.com/2022/03/27/q0QXPx.png" alt="q0QXPx.png"></a></p><p>· while循环：</p><p><a href="https://imgtu.com/i/q0QvRK"><img src="https://s1.ax1x.com/2022/03/27/q0QvRK.png" alt="q0QvRK.png"></a></p><p>· do-while循环：</p><p><a href="https://imgtu.com/i/q0QxxO"><img src="https://s1.ax1x.com/2022/03/27/q0QxxO.png" alt="q0QxxO.png"></a></p><p><a href="https://imgtu.com/i/q0lSMD"><img src="https://s1.ax1x.com/2022/03/27/q0lSMD.png" alt="q0lSMD.png"></a></p><p>· continue关键字：用于<em>立即跳出本次循环，继续下一次循环</em></p><p>· break关键字：<em>用于立即跳出整个循环（循环结束）</em></p><p>· 标识符命名规范：变量、函数命名必须有意义；变量名一般为名词；函数名一般为动词</p><p>· 操作符规范：左右各留一个空格</p><p>· 单行注释规范：前要有空格</p><p>· 数组：一组<strong>数据的集合</strong>，其中每个数据称为<strong>元素</strong>，在数组中可以存放任意类型的元素。</p><p>· 创建数组方式：数组中可以存放<strong>任意类型</strong>的数据</p><p><a href="https://imgtu.com/i/q0lpse"><img src="https://s1.ax1x.com/2022/03/27/q0lpse.png" alt="q0lpse.png"></a></p><h2 id="2022-3-27"><a href="#2022-3-27" class="headerlink" title="2022.3.27"></a>2022.3.27</h2><p>· 数组的索引：<strong>索引号从0开始</strong></p><p><a href="https://imgtu.com/i/qBPo3n"><img src="https://s1.ax1x.com/2022/03/27/qBPo3n.png" alt="qBPo3n.png"></a></p><p>· 遍历数组：把数组的元素从头到尾访问一次，arr[r]中i计数器当索引号来用</p><p>· 数组长度：<strong>数组名.length</strong></p><p>?    <em>数组的长度是元素的个数，不要跟索引号混淆；arr.length是动态检测元素的个数</em></p><p>· 数组中新增元素：1.修改length长度</p><p>2.修改索引号，追加数组元素，<strong>但是不能直接给数组名赋值，否则会覆盖掉以前的数据</strong></p><p>· 筛选数组：方法1.新数组索引号应该从0开始，依次递增</p><p>方法2.定义一个newArr=[]；刚开始newArr.length为0，然后将筛选的arr[i]存入newArr[newArr.length]</p><p>·函数的使用：声明函数和调用函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">参数<span class="number">1</span>,参数<span class="number">2.</span>.</span>)</span>&#123;</span><br><span class="line">函数体；</span><br><span class="line"><span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/qBP4hj"><img src="https://s1.ax1x.com/2022/03/27/qBP4hj.png" alt="qBP4hj.png"></a></p><p><a href="https://imgtu.com/i/qBPI9s"><img src="https://s1.ax1x.com/2022/03/27/qBPI9s.png" alt="qBPI9s.png"></a></p><p><a href="https://imgtu.com/i/qBP7j0"><img src="https://s1.ax1x.com/2022/03/27/qBP7j0.png" alt="qBP7j0.png"></a></p><p>· 函数的封装：把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口</p><p>· 函数的参数：形参和实参</p><p><a href="https://imgtu.com/i/qBPqBT"><img src="https://s1.ax1x.com/2022/03/27/qBPqBT.png" alt="qBPqBT.png"></a></p><p><a href="https://imgtu.com/i/qBPTcq"><img src="https://s1.ax1x.com/2022/03/27/qBPTcq.png" alt="qBPTcq.png"></a></p><p>· 形参实参个数匹配问题：</p><p><a href="https://imgtu.com/i/qBPLHU"><img src="https://s1.ax1x.com/2022/03/27/qBPLHU.png" alt="qBPLHU.png"></a></p><p><a href="https://imgtu.com/i/qBPbuV"><img src="https://s1.ax1x.com/2022/03/27/qBPbuV.png" alt="qBPbuV.png"></a></p><h2 id="2022-3-28"><a href="#2022-3-28" class="headerlink" title="2022.3.28"></a>2022.3.28</h2><p>· 函数的返回值：1.有终止函数的功能；2.并且只返回一个值，返回的结果是最后一个值；3.求任意两个数的，加减乘除结果，返回的是一个数组；4.函数如果有return，则返回的是return后面的值，如果函数没有return，则返回undefined。<a href="https://imgtu.com/i/qsLzGt"><img src="https://s1.ax1x.com/2022/03/29/qsLzGt.png" alt="qsLzGt.png"></a></p><p><strong>函数都有返回值</strong></p><p><a href="https://imgtu.com/i/qsLjIA"><img src="https://s1.ax1x.com/2022/03/29/qsLjIA.png" alt="qsLjIA.png"></a></p><p>· arguments的使用：是当前函数的一个内置对象，对象里存储了传递的所有的实参，当不知道用户传递过来多少个实参时用。</p><p>· 伪数组：并不是真正意义上的数组，</p><p>?    1.具有数组的length属性；2.按照索引的方式进行存储；3.它没有真正数组的一些方法 pop() push()等等</p><p>· 利用函数翻转任意数组 ：reverse()</p><p>· 函数调用另一个函数：<a href="https://imgtu.com/i/qsLXad"><img src="https://s1.ax1x.com/2022/03/29/qsLXad.png" alt="qsLXad.png"></a></p><p>· 函数的俩种声明方式：</p><p><a href="https://imgtu.com/i/qsLxPI"><img src="https://s1.ax1x.com/2022/03/29/qsLxPI.png" alt="qsLxPI.png"></a></p><p>· JavaScript作用域：代码名字在某个范围内起作用和效果，目的是为了提高程序的可靠性更重要的是减少命名冲突。</p><p>?    <strong>分全局作用域和局部作用域</strong></p><p><a href="https://imgtu.com/i/qsOSRP"><img src="https://s1.ax1x.com/2022/03/29/qsOSRP.png" alt="qsOSRP.png"></a></p><p>· 变量的作用域：1.全局变量：在全局作用域下的变量，在全局下都可使用。<em>如果在函数内部，没有声明直接赋值的变量也属于全局变量</em></p><p>2.局部变量：在局部作用域下的变量，即在函数内部的变量。函数的形参也可以看作是局部变量。更省资源</p><p>· 现阶段js没有块级作用域；js在es6的时候新增的块级作用域。</p><p><a href="https://imgtu.com/i/qsOCM8"><img src="https://s1.ax1x.com/2022/03/29/qsOCM8.png" alt="qsOCM8.png"></a></p><p>· 作用域链：内部函数访问外部函数的变量，采取的是链式查找的方式来决定取那个值。<a href="https://imgtu.com/i/qsOpxf"><img src="https://s1.ax1x.com/2022/03/29/qsOpxf.png" alt="qsOpxf.png"></a></p><p>· js引擎运行js：分倆步-》预解析+代码执行</p><p>（1）预解析:js引擎会把js里面所有的var，还有function提升到当前作用域的最前面</p><p>（2）代码执行：按照代码书写顺序，从上到下执行</p><p>· <strong>预解析</strong>-》变量预解析（变量提升）+函数预解析（函数提升）</p><p>（1）变量提升：就是把所有的变量声明提升到当前的作用域 的最前面，不提升赋值操作</p><p>?    （2）函数提升：就是把所有的函数声明提升到当前作用域的最前面，不调用函数 </p><p>· JavaScript对象：具体的事物，由属性和方法组成。</p><p>（1）属性：事物的特征，在对象中用属性来表示（常用名词）</p><p>（2）方法：事物的行为，在对象中用方法来表示（常用动词）</p><p>· 创建对象：</p><p>一、利用对象字面量创建对象{}：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line"><span class="attr">uname</span>:<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="attr">sayHi</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;hi~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>【(1)里面的属性或者方法我们采取键值对的形式，键 属性名： 值 属性值</p><p>（2)多个属性或者方法中间用逗号隔开的</p><p>（3）方法冒号后面跟的是一个匿名函数】</p><p> （2）使用对象：</p><p>【（1）调用对象的属性：对象名.属性名即console.log(obj.uname);</p><p>?        (2)调用属性还有一种方法：对象名[‘属性名’]即console.log(obj[‘age’]);</p><p>?        (3)调用对象的方法：对象名.方法名（）即obj.sayHi();<strong>不要忘了小括号</strong>】</p><p>· 变量属性函数方法的区别： </p><p><a href="https://imgtu.com/i/qsOPsS"><img src="https://s1.ax1x.com/2022/03/29/qsOPsS.png" alt="qsOPsS.png"></a></p><p>二、利用new Object创建对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=<span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">obj.uname=<span class="string">&#x27;张三丰&#x27;</span>;</span><br><span class="line">obj.age=<span class="number">18</span>;</span><br><span class="line">obj.sex=<span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">obj.sayHi=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;hi~&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【（1）利用等号=赋值方法，添加对象的属性和方法</p><p>（2）每个属性和方法之间用 分号 结束</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(obj.uname);</span><br><span class="line"><span class="built_in">console</span>.log(obj[<span class="string">&#x27;sex&#x27;</span>]);</span><br><span class="line">obj.sayHi();</span><br></pre></td></tr></table></figure><p>· 构造函数：把对象里面一些相同的属性和方法抽象出来封装到函数里面</p><p><a href="https://imgtu.com/i/qsOiqg"><img src="https://s1.ax1x.com/2022/03/29/qsOiqg.png" alt="qsOiqg.png"></a></p><p>三、利用构造函数创建对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 构造函数名(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.属性=值;</span><br><span class="line"><span class="built_in">this</span>.方法=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> 构造函数名;</span><br></pre></td></tr></table></figure><p>(1)构造函数名字首字母要大写</p><p>（2）我们构造函数不需要return，就可以返回结果</p><p>（3）调用构造函数必须使用new</p><p>（4）只要new Star（）调用函数就创建一个对象ldh{}</p><p><a href="https://imgtu.com/i/qsOkZQ"><img src="https://s1.ax1x.com/2022/03/29/qsOkZQ.png" alt="qsOkZQ.png"></a></p><h2 id="2022-3-29"><a href="#2022-3-29" class="headerlink" title="2022.3.29"></a>2022.3.29</h2><p>· 构造函数和对象的区别：利用构造函数创建对象的过程，我们也成为对象的实例化<a href="https://imgtu.com/i/qg3he1"><img src="https://s1.ax1x.com/2022/03/30/qg3he1.png" alt="qg3he1.png"></a></p><p>·  new关键字执行过程：</p><p>（1）new构造函数可以在内存中创建一个空的对象；</p><p>（2）this就会指向刚才创建的空对象；</p><p>（3）执行构造函数里面的代码，给这个新对象添加属性和方法；</p><p>（4）返回这个新对象（所有构造函数里不需要return）</p><p>· 遍历对象：<strong>for （变量 in 对象） {}</strong></p><p>变量会习惯写k或者key<a href="https://imgtu.com/i/qg3oFK"><img src="https://s1.ax1x.com/2022/03/30/qg3oFK.png" alt="qg3oFK.png"></a></p><p>· 内置对象：js自带的一些对象，供开发者使用，并提供了一些常用的或者是最基本而必要的功能(属性和方法)</p><p>· 查文档：MDN/W3C</p><p><a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p><p>· Math对象：</p><p>-》常用的：<a href="https://imgtu.com/i/qg37WD"><img src="https://s1.ax1x.com/2022/03/30/qg37WD.png" alt="qg37WD.png"></a></p><p>-》Math.random():返回一个随机的小数0=&lt;x&lt;1；方法里不跟参数<a href="https://imgtu.com/i/qg35o6"><img src="https://s1.ax1x.com/2022/03/30/qg35o6.png" alt="qg35o6.png"></a><a href="https://imgtu.com/i/qg3TJO"><img src="https://s1.ax1x.com/2022/03/30/qg3TJO.png" alt="qg3TJO.png"></a></p><p>· Date日期对象：是一个构造函数，必须使用new来调用创建日期对象<a href="https://imgtu.com/i/qg3bSe"><img src="https://s1.ax1x.com/2022/03/30/qg3bSe.png" alt="qg3bSe.png"></a></p><p> ·-》日期格式化：<a href="https://imgtu.com/i/qg3Lyd"><img src="https://s1.ax1x.com/2022/03/30/qg3Lyd.png" alt="qg3Lyd.png"></a></p><p>-》date总的毫秒数（时间戳）：<a href="https://imgtu.com/i/qg3OOA"><img src="https://s1.ax1x.com/2022/03/30/qg3OOA.png" alt="qg3OOA.png"></a></p><p>-》倒计时：  <a href="https://imgtu.com/i/qg3jeI"><img src="https://s1.ax1x.com/2022/03/30/qg3jeI.png" alt="qg3jeI.png"></a></p><p>· 创建数组的两种方式：<a href="https://imgtu.com/i/qg3xTP"><img src="https://s1.ax1x.com/2022/03/30/qg3xTP.png" alt="qg3xTP.png"></a></p><p>· 检测是否为数组的俩种方式：</p><p><a href="https://imgtu.com/i/qg3vwt"><img src="https://s1.ax1x.com/2022/03/30/qg3vwt.png" alt="qg3vwt.png"></a></p><p>· 添加数组元素：分前后添加<a href="https://imgtu.com/i/qg89fS"><img src="https://s1.ax1x.com/2022/03/30/qg89fS.png" alt="qg89fS.png"></a></p><p>· 删除数组元素：<a href="https://imgtu.com/i/qg8PSg"><img src="https://s1.ax1x.com/2022/03/30/qg8PSg.png" alt="qg8PSg.png"></a></p><p>· 数组排序：翻转数组、冒泡排序<a href="https://imgtu.com/i/qg8pY8"><img src="https://s1.ax1x.com/2022/03/30/qg8pY8.png" alt="qg8pY8.png"></a></p><p>·获取 数组元素索引：分前后查找</p><p><a href="https://imgtu.com/i/qg8Fyj"><img src="https://s1.ax1x.com/2022/03/30/qg8Fyj.png" alt="qg8Fyj.png"></a></p><h2 id="2022-3-30"><a href="#2022-3-30" class="headerlink" title="2022.3.30"></a>2022.3.30</h2><p>· 数组去重：<a href="https://imgtu.com/i/q2cQbt"><img src="https://s1.ax1x.com/2022/03/30/q2cQbt.png" alt="q2cQbt.png"></a></p><p>· 数组转换为字符串：toString();join(分隔符)<a href="https://imgtu.com/i/q2cmgH"><img src="https://s1.ax1x.com/2022/03/30/q2cmgH.png" alt="q2cmgH.png"></a><a href="https://imgtu.com/i/q2cZCD"><img src="https://s1.ax1x.com/2022/03/30/q2cZCD.png" alt="q2cZCD.png"></a></p><p>· 基本包装类型：<a href="https://imgtu.com/i/q2cAUK"><img src="https://s1.ax1x.com/2022/03/30/q2cAUK.png" alt="q2cAUK.png"></a></p><p>· <strong>字符串的不可变性：字符串里面的值，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间</strong>，开辟太多会影响效率问题</p><p>· 根据字符返回位置：<a href="https://imgtu.com/i/q2cnvd"><img src="https://s1.ax1x.com/2022/03/30/q2cnvd.png" alt="q2cnvd.png"></a><a href="https://imgtu.com/i/q2cKKA"><img src="https://s1.ax1x.com/2022/03/30/q2cKKA.png" alt="q2cKKA.png"></a></p><p>· 查找字符串中某个字符出现的次数：<a href="https://imgtu.com/i/q2cMDI"><img src="https://s1.ax1x.com/2022/03/30/q2cMDI.png" alt="q2cMDI.png"></a></p><p>· <strong>根据位置返回字符：</strong><a href="https://imgtu.com/i/q2cJPS"><img src="https://s1.ax1x.com/2022/03/30/q2cJPS.png" alt="q2cJPS.png"></a></p><p>· 拼接以及截取字符串：<a href="https://imgtu.com/i/q2c1VP"><img src="https://s1.ax1x.com/2022/03/30/q2c1VP.png" alt="q2c1VP.png"></a></p><p>· 替换字符串以及转换为数组：<a href="https://imgtu.com/i/q2ct2Q"><img src="https://s1.ax1x.com/2022/03/30/q2ct2Q.png" alt="q2ct2Q.png"></a></p><p>-》查询：<a href="https://imgtu.com/i/q2cE4O"><img src="https://s1.ax1x.com/2022/03/30/q2cE4O.png" alt="q2cE4O.png"></a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">toUpperCase();<span class="comment">//转换大写</span></span><br><span class="line">toLowerCase();<span class="comment">//转换小写</span></span><br></pre></td></tr></table></figure><p>· 数据类型内存分配：</p><p>（1）简单数据类型（基本数据类型、值类型）：在存储时变量中的是值本身，数据直接存放在栈空间中，如string、number、Boolean、undefined、null；</p><p>（2）复杂数据类型（引用类型）：在存储时变量中存储的仅仅是地址（引用），真正的对象实例存放在堆空间里，通过new关键字创建的对象（系统对象，自定义对象），如object、array、date等；</p><p>（3）堆和栈：<a href="https://imgtu.com/i/q2cNvj"><img src="https://s1.ax1x.com/2022/03/30/q2cNvj.png" alt="q2cNvj.png"></a></p><p>（4）简单、复杂数据类型内存分配过程：<a href="https://imgtu.com/i/q2cY8g"><img src="https://s1.ax1x.com/2022/03/30/q2cY8g.png" alt="q2cY8g.png"></a><a href="https://imgtu.com/i/q2c858"><img src="https://s1.ax1x.com/2022/03/30/q2c858.png" alt="q2c858.png"></a></p><p>（5）简单数据类型传参：函数的形参可以看作是一个变量，当我们把一个值类型变量作为参数传给函数的形参时，<strong>其实是把变量在栈空间里的值复制一份给形参，</strong>那么在方法内部对形参做任何修改，都不会影响到外部变量。<a href="https://imgtu.com/i/q2caKs"><img src="https://s1.ax1x.com/2022/03/30/q2caKs.png" alt="q2caKs.png"></a></p><p>（6）复杂数据类型传参：函数的形参也可以看作是一个变量，当我们把引用类型变量传给形参时，其实是把变量在栈空间里保存 <strong>的堆地址复制给形参</strong>，<strong>形参和实参其实保存的是同一个堆地址</strong>，所以操作的是同一个对象。</p><p><a href="https://imgtu.com/i/q2cdrn"><img src="https://s1.ax1x.com/2022/03/30/q2cdrn.png" alt="q2cdrn.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html5+css3进阶+移动web</title>
      <link href="/2022/03/12/html+css%E8%BF%9B%E9%98%B6%EF%BC%88%E7%A7%BB%E5%8A%A8web%EF%BC%89/"/>
      <url>/2022/03/12/html+css%E8%BF%9B%E9%98%B6%EF%BC%88%E7%A7%BB%E5%8A%A8web%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-3-12"><a href="#2022-3-12" class="headerlink" title="2022.3.12"></a>2022.3.12</h1><p>· 字体图标的使用：</p><p><a href="https://imgtu.com/i/bXDJbj"><img src="https://s1.ax1x.com/2022/03/14/bXDJbj.png" alt="bXDJbj.png"></a></p><p>?    1.在head里直接引用：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont/iconfont<span class="selector-class">.css</span>(字符的css文件)&quot;&gt;</span><br></pre></td></tr></table></figure><p>?    2.再在body里引用：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont(类名，不可缺) icon-favorites-fill(图标名)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p>· 平面转换：改变盒子在平面内的形态（位移、旋转、缩放）</p><p>【 位移 】：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">translate</span>(水平移动距离，垂直移动距离); </span><br><span class="line"><span class="attribute">transition</span>:all 速度s;</span><br></pre></td></tr></table></figure><p>【绝对定位居中】：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br></pre></td></tr></table></figure><h2 id="2022-3-13"><a href="#2022-3-13" class="headerlink" title="2022.3.13"></a>2022.3.13</h2><p>【 旋转 】：</p><p><a href="https://imgtu.com/i/bXD8Kg"><img src="https://s1.ax1x.com/2022/03/14/bXD8Kg.png" alt="bXD8Kg.png"></a></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">rotate</span>(角度deg);</span><br></pre></td></tr></table></figure><p>【转换原点】：绕某一点旋转</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform-origin</span>:原点水平位置 原点垂直位置;</span><br></pre></td></tr></table></figure><p>【多重转换】：边转边走（车轮）：先位移后旋转（反了会导致旋转改变坐标轴向）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">tranlate</span>(像素) <span class="built_in">rotate</span>(角度deg);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bXDGrQ"><img src="https://s1.ax1x.com/2022/03/14/bXDGrQ.png" alt="bXDGrQ.png"></a></p><p>【缩放】：大于1表放大；小于1表缩小</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">scale</span>(缩放倍数);</span><br></pre></td></tr></table></figure><p><strong>透明：opacity:0消失、1出现</strong></p><p>· 渐变：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">backgroud-image:<span class="built_in">linera-gradient</span>(颜色<span class="number">1</span>,颜色<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><h2 id="2022-3-14"><a href="#2022-3-14" class="headerlink" title="2022.3.14"></a>2022.3.14</h2><p>· 空间转换（3D转换）：z轴位置与视线方向相同</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">translate3d</span>(x,y,z);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">translateX</span>(值);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">translateY</span>(值);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">translateZ</span>(值);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bX5DtU"><img src="https://s1.ax1x.com/2022/03/14/bX5DtU.png" alt="bX5DtU.png"></a></p><p>· 透视：近大远小，但电脑屏幕的平面，默认无法观察远近效果</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">perspective</span>:像素;(添加给父级的，取值<span class="number">800</span>-<span class="number">1200</span>)</span><br></pre></td></tr></table></figure><h2 id="2022-3-15"><a href="#2022-3-15" class="headerlink" title="2022.3.15"></a>2022.3.15</h2><p>· 空间旋转：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">rotateZ</span>(值); 饶中心转，跟平面一样   角度</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">rotateX</span>(值); 饶X朝屏幕向上下转</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">rotateY</span>(值); 饶Y朝屏幕左右转</span><br></pre></td></tr></table></figure><p>【左手法则】：判断旋转方向：<strong>左手</strong>握住旋转轴，拇指指向正值方向，手指弯曲方向为旋转正值方向</p><p>· 立体呈现：父级，使子元素处于真正的3d空间；默认值flat，表示子元素处于2D平面内呈现</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform-style</span>:preserve-<span class="number">3</span>d;</span><br></pre></td></tr></table></figure><h2 id="2022-3-16"><a href="#2022-3-16" class="headerlink" title="2022.3.16"></a>2022.3.16</h2><p>· 空间转换-缩放：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:<span class="built_in">scaleX</span>(倍数);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scaleY</span>(倍数);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scaleZ</span>(倍数);</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scale3d</span>(x,y,z);</span><br></pre></td></tr></table></figure><p>· 动画：</p><p>from..to..单个动画；百分比（动画总时长的占比）…多个动画</p><p><a href="https://imgtu.com/i/q93pVI"><img src="https://s1.ax1x.com/2022/03/17/q93pVI.png" alt="q93pVI.png"></a></p><p><a href="https://imgtu.com/i/q91zqA"><img src="https://s1.ax1x.com/2022/03/17/q91zqA.png" alt="q91zqA.png"></a></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">animation</span>: change <span class="number">1s</span> <span class="built_in">linear</span>(匀速运动，一般不设置)/<span class="built_in">step</span>(<span class="number">3</span>)(分布动画) <span class="number">1s</span> <span class="number">3</span>(重复<span class="number">3</span>次)/<span class="built_in">infinite</span>(无限循环)  <span class="built_in">alternate</span>(反向运动) <span class="built_in">backwards</span>(默认值，动画停留在最初的状态)/<span class="built_in">forwards</span>(动画停留在最终)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/qFLsRU"><img src="https://s1.ax1x.com/2022/03/18/qFLsRU.png" alt="qFLsRU.png"></a></p><p>· 逐帧动画：配合精灵图</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">animation-timing-function</span>:<span class="built_in">steps</span>(N);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/qFLdZn"><img src="https://s1.ax1x.com/2022/03/18/qFLdZn.png" alt="qFLdZn.png"></a></p><p>· 多组动画：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">animation</span>:动画<span class="number">1</span>,动画<span class="number">2</span>,动画N;</span><br></pre></td></tr></table></figure><p>·  分辨率分类：物理分辨率是生产屏幕时就固定的；逻辑分辨率是由软件（驱动）决定的，代码也是参照这个写的</p><h2 id="2022-3-17"><a href="#2022-3-17" class="headerlink" title="2022.3.17"></a>2022.3.17</h2><p>· 视口：网页宽度和设备宽度（分辨率）相同</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span> vs现有</span><br></pre></td></tr></table></figure><p>没有视口标签就是<strong>980px</strong></p><p>· 网页大多为二倍图（2：1），为了高分辨率下图片不会模糊失真</p><p>· 百分比布局：能够使用百分比布局开发网页；宽度自适应，高度固定</p><p>· Flex布局：灵活、快速的开发网页</p><p><a href="https://imgtu.com/i/qFL0I0"><img src="https://s1.ax1x.com/2022/03/18/qFL0I0.png" alt="qFL0I0.png"></a></p><p><strong>caniuse.com</strong>可打开这个网站查询技术是否兼容浏览器</p><p><a href="https://imgtu.com/i/qFLwaq"><img src="https://s1.ax1x.com/2022/03/18/qFLwaq.png" alt="qFLwaq.png"></a></p><p>· 【主轴对齐方式】：</p><p><a href="https://imgtu.com/i/qFLDiV"><img src="https://s1.ax1x.com/2022/03/18/qFLDiV.png" alt="qFLDiV.png"></a></p><p>· 【侧轴对齐方式】：</p><p><a href="https://imgtu.com/i/qFLyzF"><img src="https://s1.ax1x.com/2022/03/18/qFLyzF.png" alt="qFLyzF.png"></a></p><p>· 【弹性盒子】：如果不给宽高，就按内容的大小撑开；如果给宽高，给多少就是多少；如果有拉伸，就会跟父级一样</p><p>· 【弹性伸缩比】：根据父级剩余尺寸给定份数</p><p><a href="https://imgtu.com/i/qFLrGT"><img src="https://s1.ax1x.com/2022/03/18/qFLrGT.png" alt="qFLrGT.png"></a></p><h2 id="2022-3-18"><a href="#2022-3-18" class="headerlink" title="2022.3.18"></a>2022.3.18</h2><p>小兔鲜儿移动端支付页面</p><h2 id="2022-3-19"><a href="#2022-3-19" class="headerlink" title="2022.3.19"></a>2022.3.19</h2><p>小兔鲜儿移动端支付页面</p><h2 id="2022-3-20"><a href="#2022-3-20" class="headerlink" title="2022.3.20"></a>2022.3.20</h2><p>· 【改变主轴方向】：</p><p>?    1.先确定主轴方向 ；2.在选择对应的属性实现主轴或侧轴的对齐方式</p><p><a href="https://imgtu.com/i/qmYLp8"><img src="https://s1.ax1x.com/2022/03/21/qmYLp8.png" alt="qmYLp8.png"></a></p><p>· 【弹性盒子换行】：</p><p><a href="https://imgtu.com/i/qmYX6g"><img src="https://s1.ax1x.com/2022/03/21/qmYX6g.png" alt="qmYX6g.png"></a></p><p>· 移动适配：</p><p>?    · rem:目前多数企业在用的解决方案</p><p>?    · vw/vh:未来的解决方案</p><p>· rem单位：设置网页元素的尺寸；相对单位，是相对html标签的</p><p><a href="https://imgtu.com/i/qmYbff"><img src="https://s1.ax1x.com/2022/03/21/qmYbff.png" alt="qmYbff.png"></a></p><p><strong>要在style里用html{设置自豪}</strong></p><p>· rem移动适配-媒体查询：</p><p><a href="https://imgtu.com/i/qmYO1S"><img src="https://s1.ax1x.com/2022/03/21/qmYO1S.png" alt="qmYO1S.png"></a></p><p>· rem移动适配：将网页等分成10分，html标签的自豪为视口宽度的1/10</p><p>· rem适配原理：</p><p><a href="https://imgtu.com/i/qmYjXQ"><img src="https://s1.ax1x.com/2022/03/21/qmYjXQ.png" alt="qmYjXQ.png"></a></p><p>· flexible移动适配：</p><p><a href="https://imgtu.com/i/qmYxmj"><img src="https://s1.ax1x.com/2022/03/21/qmYxmj.png" alt="qmYxmj.png"></a></p><p>· Less：是一个css预处理器，Less文件后缀.less;<em>浏览器不识别Less代码，目前阶段，网页要引入对应的css</em></p><p>文件</p><p>· 【less语法】：</p><p><a href="https://imgtu.com/i/qmYz0s"><img src="https://s1.ax1x.com/2022/03/21/qmYz0s.png" alt="qmYz0s.png"></a></p><p><a href="https://imgtu.com/i/qmtS7n"><img src="https://s1.ax1x.com/2022/03/21/qmtS7n.png" alt="qmtS7n.png"></a></p><p><a href="https://imgtu.com/i/qKNxCn"><img src="https://s1.ax1x.com/2022/03/22/qKNxCn.png" alt="qKNxCn.png"></a></p><p><a href="https://imgtu.com/i/qKNz3q"><img src="https://s1.ax1x.com/2022/03/22/qKNz3q.png" alt="qKNz3q.png"></a></p><p><a href="https://imgtu.com/i/qKUSg0"><img src="https://s1.ax1x.com/2022/03/22/qKUSg0.png" alt="qKUSg0.png"></a></p><p><a href="https://imgtu.com/i/qKUpvV"><img src="https://s1.ax1x.com/2022/03/22/qKUpvV.png" alt="qKUpvV.png"></a></p><p><a href="https://imgtu.com/i/qKUCuT"><img src="https://s1.ax1x.com/2022/03/22/qKUCuT.png" alt="qKUCuT.png"></a></p><h2 id="2022-3-21"><a href="#2022-3-21" class="headerlink" title="2022.3.21"></a>2022.3.21</h2><p>· vw（viewport width）:相对单位，相对视口的尺寸计算结果，设置网页元素的尺寸；<strong>1vw=1/100视口宽度</strong></p><p>· vh（viewport height）：同上，<strong>1vh=1/100视口高度</strong></p><p>· vw适配原理：</p><p><a href="https://imgtu.com/i/qKUibF"><img src="https://s1.ax1x.com/2022/03/22/qKUibF.png" alt="qKUibF.png"></a></p><p>· vh适配原理：同上</p><p>· vh全面屏影响：会导致在不同的手机屏里，高缩小了；最好不要vw、vh混合使用</p><p>· 媒体查询基本语法：</p><p><a href="https://imgtu.com/i/qKUPDU"><img src="https://s1.ax1x.com/2022/03/22/qKUPDU.png" alt="qKUPDU.png"></a></p><p>?        -》书写顺序：</p><p><a href="https://imgtu.com/i/qKUAUJ"><img src="https://s1.ax1x.com/2022/03/22/qKUAUJ.png" alt="qKUAUJ.png"></a></p><p>· 媒体查询-link写法：</p><p><a href="https://imgtu.com/i/qKUE59"><img src="https://s1.ax1x.com/2022/03/22/qKUE59.png" alt="qKUE59.png"></a></p><p>· 媒体查询-隐藏：</p><p><a href="https://imgtu.com/i/qKUkE4"><img src="https://s1.ax1x.com/2022/03/22/qKUkE4.png" alt="qKUkE4.png"></a></p><p>· Bootstrap：一种框架快速开发布局响应式网页。*中文官网：<a href="https://www.bootcss.com/*%EF%BC%88%E2%91%A0%E7%94%A8%E4%BA%8E%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84Bootstrap%EF%BC%9B%E2%91%A1Bootstrap%E6%BA%90%E7%A0%81%EF%BC%8C%E9%9C%80%E8%A6%81less%E7%BC%96%E8%AF%91%E5%99%A8%E5%92%8C%E4%B8%80%E4%BA%9B%E8%AE%BE%E7%BD%AE%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%96%87%E4%BB%B6%E5%B8%A6dist%E5%90%8E%E7%BC%80%EF%BC%89%E7%AD%89%E4%BA%8E%E7%8E%B0%E6%88%90%E7%9A%84%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E5%92%8Cless%E3%80%82">https://www.bootcss.com/*（①用于生产环境的Bootstrap；②Bootstrap源码，需要less编译器和一些设置工作，文件带dist后缀）等于现成的媒体查询和less。</a></p><p>?    -》使用步骤：</p><p><a href="https://imgtu.com/i/qlVoSH"><img src="https://s1.ax1x.com/2022/03/23/qlVoSH.png" alt="qlVoSH.png"></a></p><p><a href="https://imgtu.com/i/qlV76A"><img src="https://s1.ax1x.com/2022/03/23/qlV76A.png" alt="qlV76A.png"></a></p><p><a href="https://imgtu.com/i/qlVHOI"><img src="https://s1.ax1x.com/2022/03/23/qlVHOI.png" alt="qlVHOI.png"></a></p><p>?    -》栅格系统：布局响应式网页，网页分成12等份</p><p><a href="https://imgtu.com/i/qlVWTK"><img src="https://s1.ax1x.com/2022/03/23/qlVWTK.png" alt="qlVWTK.png"></a></p><p>?    -》container类名：</p><p><a href="https://imgtu.com/i/qlVhFO"><img src="https://s1.ax1x.com/2022/03/23/qlVhFO.png" alt="qlVhFO.png"></a></p><p><a href="https://imgtu.com/i/qlV5fe"><img src="https://s1.ax1x.com/2022/03/23/qlV5fe.png" alt="qlV5fe.png"></a></p><p><strong>要学会从学习手册（中文官网）里查找需要的代码，复制粘贴</strong></p><p>?    -》全局css样式：从手册里，复制粘贴class的类名即可起效</p><p><a href="https://imgtu.com/i/qKUE59"><img src="https://s1.ax1x.com/2022/03/22/qKUE59.png" alt="qKUE59.png"></a></p><p>?    -》组件样式：引样式表，改类名</p><p><a href="https://imgtu.com/i/qlVqmt"><img src="https://s1.ax1x.com/2022/03/23/qlVqmt.png" alt="qlVqmt.png"></a></p><p>?    -》字体图标：同上</p><p><a href="https://imgtu.com/i/qlVTld"><img src="https://s1.ax1x.com/2022/03/23/qlVTld.png" alt="qlVTld.png"></a></p><p>?    -》（js插件）-下拉菜单：引js，改类名</p><p><a href="https://imgtu.com/i/qlVL0P"><img src="https://s1.ax1x.com/2022/03/23/qlVL0P.png" alt="qlVL0P.png"></a></p><p>?    -》（js插件）-轮播图：同上</p><p>?    -》全局样式：排版（电商站做不到响应式，企业站才能，或者是pc端移动端分开做的）</p>]]></content>
      
      
      <categories>
          
          <category> html、css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html、css、 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html5+css3基础</title>
      <link href="/2022/03/01/html+css%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/03/01/html+css%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-3-1"><a href="#2022-3-1" class="headerlink" title="2022.3.1"></a>2022.3.1</h1><h2 id="一、基础认知"><a href="#一、基础认知" class="headerlink" title="一、基础认知"></a>一、基础认知</h2><p>1.网页有文字、图片、音频、视频、超链接组成<br>2.程序员写的代码通过浏览器转换成网页（对代码进行解析渲染，渲染引擎不同，导致解析代码的速度等不同）<br>3.五大浏览器：IE、火狐、谷歌(程序员)、safari(苹果)、opera(欧鹏)<br>4.Web标准：HTML（结构-&gt;页面元素和内容）<br>        CSS（表现-&gt;页面样式）<br>        Javascript（行为-&gt;模型定义与页面交互)</p><h3 id="5-HTML："><a href="#5-HTML：" class="headerlink" title="5.HTML："></a>5.HTML：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>文字加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    · 固定结构：<a href="https://imgtu.com/i/bJEPg0"><img src="https://s4.ax1x.com/2022/03/03/bJEPg0.png" alt="bJEPg0.png"></a><br>​    · 注释（养成好习惯）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释内容--&gt;</span></span><br></pre></td></tr></table></figure><p>​    · 双标签，单标签<br>​    · 父子关系（嵌套），兄弟关系（并列）<br>​    · 标题标签h1~h6（数大字小）:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    · 段落标签： （独占一行）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 我是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="2022-3-3"><a href="#2022-3-3" class="headerlink" title="2022.3.3"></a>2022.3.3</h1><p>​    · 换行标签：（文字强制换行）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><p>· 分割线：（水平线）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>· 文本格式化标签：（都是双标签）</p><p><a href="https://imgtu.com/i/bJhrXF"><img src="https://s4.ax1x.com/2022/03/03/bJhrXF.md.png" alt="bJhrXF.md.png"></a></p><p>· 图片标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;路径+图片名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;占位文字&quot;</span> <span class="attr">title</span>=<span class="string">&quot;鼠标悬停文字&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  ·相对路径：从当前文件（当前的html）开始出发找目标文件（要找的图片）的过程。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">同级目录：①<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;目标图片.gif&quot;</span>&gt;</span> ②<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./目标图片.gif&quot;</span>&gt;</span></span><br><span class="line">下级目录：<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;文件夹名/目标名字.gif&quot;</span>&gt;</span></span><br><span class="line">上级目录：<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../目标图片.gif&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  ·绝对路径：指目录下的绝对路径，可直接到达目标位置，通常从盘符开始的路径</p><p>· 音频标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./music.mp3&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bJhD6U"><img src="https://s4.ax1x.com/2022/03/03/bJhD6U.png" alt="bJhD6U.png"></a></p><p>· 视频标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;./video.mp4&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bJhBlT"><img src="https://s4.ax1x.com/2022/03/03/bJhBlT.png" alt="bJhBlT.png"></a></p><p>· 链接标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;网址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标网页的打开形式&quot;</span>&gt;</span>XXX<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./目标文件.html&quot;</span>&gt;</span>文字描述<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>空连接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bJh0pV"><img src="https://s4.ax1x.com/2022/03/03/bJh0pV.png" alt="bJh0pV.png"></a></p><p>· 无序列表标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>无序包裹<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>无序每一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>:none;</span><br><span class="line">&#125;<span class="comment">/*去掉列表的符号*/</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY7GqK"><img src="https://s4.ax1x.com/2022/03/03/bY7GqK.png" alt="bY7GqK.png"></a></p><p>· 有序列表标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span>有序包裹<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>有序每一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY76Z8"><img src="https://s4.ax1x.com/2022/03/03/bY76Z8.png" alt="bY76Z8.png"></a></p><p>· 自定义列表标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>自定义整体，包裹dt、dd<span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>自定义列表的主题<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>针对主题的每一项<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY7aPH"><img src="https://s4.ax1x.com/2022/03/03/bY7aPH.png" alt="bY7aPH.png"></a></p><p>· 表格标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>表格整体，包裹多个tr<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>表格每行,包裹td<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>表格单元格，包裹所以内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY7NIe"><img src="https://s4.ax1x.com/2022/03/03/bY7NIe.png" alt="bY7NIe.png"></a></p><p>· 表格标题和表头单元格标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>整体大标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>表格第一行<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY73Kx"><img src="https://s4.ax1x.com/2022/03/03/bY73Kx.png" alt="bY73Kx.png"></a></p><p>· 表格的结构标签：</p><p><a href="https://imgtu.com/i/bY7YVO"><img src="https://s4.ax1x.com/2022/03/03/bY7YVO.png" alt="bY7YVO.png"></a></p><p>· 合并单元格：不能跨结构合并</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rowspan</span>&gt;</span>跨行合并<span class="tag">&lt;/<span class="name">rowspan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">colspan</span>&gt;</span>跨列合并<span class="tag">&lt;/<span class="name">colspan</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY7dGd"><img src="https://s4.ax1x.com/2022/03/03/bY7dGd.png" alt="bY7dGd.png"></a></p><p>· 表单标签：</p><p>​    · 表单域标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span>包括在input里，对重置才有效<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    · input标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入框提示字&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bY70xI"><img src="https://s4.ax1x.com/2022/03/03/bY70xI.png" alt="bY70xI.png"></a></p><p><a href="https://imgtu.com/i/bY7wRA"><img src="https://s4.ax1x.com/2022/03/03/bY7wRA.png" alt="bY7wRA.png"></a></p><p><a href="https://imgtu.com/i/bY7DMt"><img src="https://s4.ax1x.com/2022/03/03/bY7DMt.png" alt="bY7DMt.png"></a></p><p><a href="https://imgtu.com/i/bY7rsP"><img src="https://s4.ax1x.com/2022/03/03/bY7rsP.png" alt="bY7rsP.png"></a></p><p>​    · button按钮标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">botton</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">botton</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/btiT3t"><img src="https://s4.ax1x.com/2022/03/03/btiT3t.png" alt="btiT3t.png"></a></p><p>· select下拉菜单标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected(默认选中)&quot;</span>&gt;</span>菜单名<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>· text area文本域标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;宽&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>· label标签：</p><p><a href="https://imgtu.com/i/bti54A"><img src="https://s4.ax1x.com/2022/03/03/bti54A.png" alt="bti54A.png"></a></p><p>· 没有语义的布局标签：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>一整块大盒子</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>一小段</span><br></pre></td></tr></table></figure><p>· 有语义的布局标签：（H5手机端网页）</p><p><a href="https://imgtu.com/i/bti4Nd"><img src="https://s4.ax1x.com/2022/03/03/bti4Nd.png" alt="bti4Nd.png"></a></p><p>· 字符实体：</p><p>HTML中的空格合并现象</p><p><a href="https://imgtu.com/i/btio9I"><img src="https://s4.ax1x.com/2022/03/03/btio9I.png" alt="btio9I.png"></a></p><h3 id="CSS："><a href="#CSS：" class="headerlink" title="CSS："></a>CSS：</h3><p>· 语法规则：写在style标签中，style标签一般在head标签里，title标签下面</p><p>· /* css注释 */</p><p>· p{选择器里设置样式}</p><p>· 引入方式：内嵌式（写在head里,style标签中），外嵌式（单独写在.css文件里），行内式（写在style属性中，配合js使用）</p><p>· 基础选择器：</p><p>   · 标签选择器（选中所有的这个标签都生效css）：标签名{css属性名：属性值；}<br>    · 类选择器：.类名{css属性名：属性值；}</p><p><a href="https://imgtu.com/i/btihAH"><img src="https://s4.ax1x.com/2022/03/03/btihAH.png" alt="btihAH.png"></a></p><p>​    · id选择器：#id属性值{css属性名：属性值；}</p><p><a href="https://imgtu.com/i/bti7gP"><img src="https://s4.ax1x.com/2022/03/03/bti7gP.png" alt="bti7gP.png"></a></p><p>​    · 通配符选择器：*{css属性名：属性值；}</p><p><a href="https://imgtu.com/i/btiHjf"><img src="https://s4.ax1x.com/2022/03/03/btiHjf.png" alt="btiHjf.png"></a></p><h1 id="2022-3-4"><a href="#2022-3-4" class="headerlink" title="2022.3.4"></a>2022.3.4</h1><p>· 字体大小：<em><strong>font-size：数字px;</strong></em> (默认16)</p><p>· 字体粗细：<em><strong>font-weight：bold/700/nomal/400;</strong></em></p><p>· 字体倾斜：<em><strong>font-style：italic;</strong></em></p><p>·字体：***font-family：宋体;***（默认微软雅黑,如果用户没有安装微软雅黑，就用黑体显示，如果也没有黑体，就按任意一种非衬线字体系列显示)-》无衬线字体（sans-serif)，衬线字体(serif)，等宽字体（monnspace)</p><p>· 样式层叠问题：如果给同一个标签设置了相同的属性，此时样式会层叠（覆盖），写在最下面的会生效。</p><p>· 字体font相关属性（复合属性）连写：<strong>font:style weight size family;</strong>(每个值用空格隔开)</p><p>​        如果想要单独设置，则单独下在下面；如果想要省略，只能省前俩个。</p><p>· 文本缩进：<em><strong>text-indent：数字px/2em(俩字大小）;</strong></em></p><p>· 文本水平对齐方式：***text-align:left/center/right;***图也可以用</p><p><a href="https://imgtu.com/i/bagx6f"><img src="https://s4.ax1x.com/2022/03/04/bagx6f.png" alt="bagx6f.png"></a></p><p>· 文本修饰：***text-decoration:none;***清除a标签默认的下划线</p><p><a href="https://imgtu.com/i/bagv1P"><img src="https://s4.ax1x.com/2022/03/04/bagv1P.png" alt="bagv1P.png"></a></p><p>· 行高：<em><strong>line-height:数字px/倍数（当前标签font-size的倍数）；</strong></em></p><p><a href="https://imgtu.com/i/ba290g"><img src="https://s4.ax1x.com/2022/03/04/ba290g.png" alt="ba290g.png"></a></p><p>· 谷歌调试工具：右键检查；F12elements;删除线部分不生效；字号上下方向键可调节；tab键可增加样式；√可选择可取消样式</p><p><a href="https://imgtu.com/i/bagzX8"><img src="https://s4.ax1x.com/2022/03/04/bagzX8.png" alt="bagzX8.png"></a></p><p>** <strong>选择器进阶</strong> **</p><p>· 后代选择器：选择器1空格选择器2{css}</p><p><a href="https://imgtu.com/i/ba2pnS"><img src="https://s4.ax1x.com/2022/03/04/ba2pnS.png" alt="ba2pnS.png"></a></p><p>· 子代选择器：选择器1&gt;选择器2{css}</p><p><a href="https://imgtu.com/i/ba2C7Q"><img src="https://s4.ax1x.com/2022/03/04/ba2C7Q.png" alt="ba2C7Q.png"></a></p><p>· 并集选择器：选择器1，选择器2{css}</p><p><a href="https://imgtu.com/i/ba2ikj"><img src="https://s4.ax1x.com/2022/03/04/ba2ikj.png" alt="ba2ikj.png"></a></p><p>· 交集选择器：选择器1选择器2{css}</p><p>[url=<a href="https://imgtu.com/i/ba2Fts][img]https://s4.ax1x.com/2022/03/04/ba2Fts.md.png[/img][/url]">https://imgtu.com/i/ba2Fts][img]https://s4.ax1x.com/2022/03/04/ba2Fts.md.png[/img][/url]</a></p><p>· hover伪类选择器：hover{css}  任何标签都可以加</p><p><a href="https://imgtu.com/i/ba2khn"><img src="https://s4.ax1x.com/2022/03/04/ba2khn.png" alt="ba2khn.png"></a></p><p>· emmet语法：编译器插件，简写即可快速生成</p><p><a href="https://imgtu.com/i/ba2Epq"><img src="https://s4.ax1x.com/2022/03/04/ba2Epq.png" alt="ba2Epq.png"></a></p><h2 id="2022-3-5"><a href="#2022-3-5" class="headerlink" title="2022.3.5"></a>2022.3.5</h2><p>· 背景颜色：<em><strong>background-color:颜色英文名/RGB/RGBA(透明色);</strong></em></p><p>· 背景图片：<em><strong>background-image:url(‘图片的路径’);</strong></em>  会自动填充</p><p>· 背景平铺：<em><strong>background-repeat:no-repeat；</strong></em></p><p><a href="https://imgtu.com/i/bB3E3d"><img src="https://s1.ax1x.com/2022/03/06/bB3E3d.png" alt="bB3E3d.png"></a></p><p>· 背景位置：<em><strong>background-position:水平位置空格垂直位置；</strong></em></p><p><a href="https://imgtu.com/i/bB3mut"><img src="https://s1.ax1x.com/2022/03/06/bB3mut.png" alt="bB3mut.png"></a></p><p>· 背景相关属性连写：<em><strong>backbround:color image repeat position;</strong></em>(空格隔开英文单词可颠倒顺序，数值不可)</p><p><a href="https://imgtu.com/i/bB3ZjI"><img src="https://s1.ax1x.com/2022/03/06/bB3ZjI.png" alt="bB3ZjI.png"></a></p><p>· <u>img和背景图的区别：前者展示重要的图，后者展示不重要的</u></p><p>· 块级元素：独占一行，宽度默认是父级的100%，高度默认由内容撑开，可以设置宽高</p><p><a href="https://imgtu.com/i/bB3A9H"><img src="https://s1.ax1x.com/2022/03/06/bB3A9H.png" alt="bB3A9H.png"></a></p><p>· 行内元素：一行可以显示多个，宽度和高度都由内容撑开，不可以设置宽高</p><p><a href="https://imgtu.com/i/bB3F4e"><img src="https://s1.ax1x.com/2022/03/06/bB3F4e.png" alt="bB3F4e.png"></a></p><p>· 行内块元素：一行可以显示多个，可以设置宽高</p><p><a href="https://imgtu.com/i/bB3VgA"><img src="https://s1.ax1x.com/2022/03/06/bB3VgA.png" alt="bB3VgA.png"></a></p><p>· 显示模式（以上三种）转换：</p><p><a href="https://imgtu.com/i/bB3nDP"><img src="https://s1.ax1x.com/2022/03/06/bB3nDP.png" alt="bB3nDP.png"></a></p><p>· <u>标签嵌套问题：</u><a href="https://imgtu.com/i/bB3uHf"><img src="https://s1.ax1x.com/2022/03/06/bB3uHf.png" alt="bB3uHf.png"></a></p><p>· css的特性：<strong>继承性：子承父业</strong></p><p>控制文字的属性都能继承，不是控制文字的属性不能继承</p><p><a href="https://imgtu.com/i/bB3ME8"><img src="https://s1.ax1x.com/2022/03/06/bB3ME8.png" alt="bB3ME8.png"></a><a href="https://imgtu.com/i/bB3QUS"><img src="https://s1.ax1x.com/2022/03/06/bB3QUS.png" alt="bB3QUS.png"></a></p><p>​                        <strong>层叠性：后面的覆盖前面的</strong></p><p><a href="https://imgtu.com/i/bB33CQ"><img src="https://s1.ax1x.com/2022/03/06/bB33CQ.png" alt="bB33CQ.png"></a></p><p>​                        <strong>优先级：优先级高的选择器会覆盖低的</strong></p><p><a href="https://imgtu.com/i/bB3l4g"><img src="https://s1.ax1x.com/2022/03/06/bB3l4g.png" alt="bB3l4g.png"></a></p><p><em>权重叠加计算：个数多权重大优先级最大</em></p><pre><code>                  · *！important最高，继承最低*</code></pre><p>​                        · <em>标签选择器选择一类</em></p><p>​                        · <em>权重叠加每位不存在进制</em></p><p>​                        · <em>权重相同此时比较层叠性</em></p><p>​                        · <em>都是继承，继承里谁最高，看继承哪个父级，哪个父级高，哪个选择器生效</em></p><p><a href="https://imgtu.com/i/bB3Ggs"><img src="https://s1.ax1x.com/2022/03/06/bB3Ggs.png" alt="bB3Ggs.png"></a></p><p>· 谷歌浏览器排错</p><p><a href="https://imgtu.com/i/bB3Jvn"><img src="https://s1.ax1x.com/2022/03/06/bB3Jvn.png" alt="bB3Jvn.png"></a></p><p>· 盒子模型：<strong>内容区域（content）、内边距区域（padding）、边框区域（border）、外边距区域（margin）</strong></p><p>​    –》内容的宽高：利用<strong>width</strong>和<strong>height</strong>属性默认设置是盒子<strong>内容区域</strong>的大小，即width/height:数字px;</p><p>​    –》边框区域（连写形式）：<strong>border:10px空格实线solid/虚线dashed/点线dotted空格；</strong>  部分先后顺序</p><p>​    –》边框-单方向设置：<strong>border-left/right/top/bottom：同上；</strong></p><p>​    –》边框-单个属性：</p><p><a href="https://imgtu.com/i/bB383j"><img src="https://s1.ax1x.com/2022/03/06/bB383j.png" alt="bB383j.png"></a></p><p>​    –》盒子尺寸=width or height+边框线（盒子被border、padding撑大了，要减去边框大小）</p><h2 id="2020-3-6"><a href="#2020-3-6" class="headerlink" title="2020.3.6"></a>2020.3.6</h2><p>· 布局思路：从外到内，先宽高背景色，放内容，调节内容的位置；控制文字细节</p><p><a href="https://imgtu.com/i/bDz9z9"><img src="https://s1.ax1x.com/2022/03/06/bDz9z9.png" alt="bDz9z9.png"></a></p><p>​    –》内边距：<strong>padding:数字；（其属性可以当作复合属性使用，表示单独设置某个方向的内边距，最多可取4个值）4上 右 下 左/3上 左右 下/2上下 左右 （顺时针，遇到没有看对面）</strong> 宽度可设置为0，灵活性更高</p><p>· css3多写一行代码，即可实现自动去减（内减模式）</p><p><a href="https://imgtu.com/i/bDzis1"><img src="https://s1.ax1x.com/2022/03/06/bDzis1.png" alt="bDzis1.png"></a></p><p>​    –》外边距：<strong>margin:数字；</strong>其余同上</p><p>①合并现象问题：避免就好</p><p><a href="https://imgtu.com/i/bDzpRJ"><img src="https://s1.ax1x.com/2022/03/06/bDzpRJ.png" alt="bDzpRJ.png"></a></p><p>②塌陷现象问题：给父元素设置overflow:hidden;</p><p><a href="https://imgtu.com/i/bDzFqx"><img src="https://s1.ax1x.com/2022/03/06/bDzFqx.png" alt="bDzFqx.png"></a></p><p>③行内元素的内外边距的问题：</p><p><a href="https://imgtu.com/i/bDzVIO"><img src="https://s1.ax1x.com/2022/03/06/bDzVIO.png" alt="bDzVIO.png"></a></p><p>​    –》清除默认的内外边距：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bDzPMR"><img src="https://s1.ax1x.com/2022/03/06/bDzPMR.png" alt="bDzPMR.png"></a></p><p>· 版心（网页的有效内容）居中：<strong>margin:0 auto;</strong></p><p>· 结构伪类选择器：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">nth-child(n)&#123;&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bDznRH"><img src="https://s1.ax1x.com/2022/03/06/bDznRH.png" alt="bDznRH.png"></a></p><p><a href="https://imgtu.com/i/bDzmJe"><img src="https://s1.ax1x.com/2022/03/06/bDzmJe.png" alt="bDzmJe.png"></a></p><p>· 伪元素：通过css创建标签，装饰性的不重要的小图；找父级，在这个父级里创建子级标签；</p><p><a href="https://imgtu.com/i/bDzuzd"><img src="https://s1.ax1x.com/2022/03/06/bDzuzd.png" alt="bDzuzd.png"></a></p><p>· 标准流：默认的标签排列规则</p><p><a href="https://imgtu.com/i/bDzMQA"><img src="https://s1.ax1x.com/2022/03/06/bDzMQA.png" alt="bDzMQA.png"></a></p><p><u>行内块问题：浏览器解析行内块或行内标签的时候，如果标签换行写会产生一个空格的间距。</u></p><p>· 浮动： <strong>图文环绕：float:left/right;</strong></p><p>​    特点：标签顶对齐；浮动在一行排列，宽高生效，浮动后的标签具备行内块特点</p><p><a href="https://imgtu.com/i/bDzQsI"><img src="https://s1.ax1x.com/2022/03/06/bDzQsI.png" alt="bDzQsI.png"></a></p><p>如果父级的宽度不够，子级会自动换行</p><h2 id="2022-3-7"><a href="#2022-3-7" class="headerlink" title="2022.3.7"></a>2022.3.7</h2><p>· css书写顺序：浏览器执行效率高</p><p>​    1.浮动（display）</p><p>​    2.盒子模型：maegin,border,padding,宽度高度背景色</p><p>​    3.文字样式</p><p>· 清除浮动：父子级标签，子级浮动，父级没有高度，后面的标准流盒子会受影响</p><p>，显示到上面的位置</p><p><a href="https://imgtu.com/i/b6VFh9"><img src="https://s1.ax1x.com/2022/03/07/b6VFh9.png" alt="b6VFh9.png"></a></p><p>​    -》》解决方法：①直接设置父元素的高度</p><p>​                                ②额外标签法：在父元素内容的最后添加一个块级元素,<strong>设置clear:both；清除俩测对浮动的影响</strong>(缺点：使网页变得复杂)</p><p>​                                ③单伪元素清除法：</p><p><a href="https://imgtu.com/i/b6VE11"><img src="https://s1.ax1x.com/2022/03/07/b6VE11.png" alt="b6VE11.png"></a></p><p>​                                ④双伪元素清除法：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>(作用：解决外边距塌陷问题-》父子标签，都是块级，子级加了<span class="attribute">margin</span>会影响父级的位置）,<span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​                            ⑤给父级设置overflow:hidden;</p><h2 id="2022-3-8"><a href="#2022-3-8" class="headerlink" title="2022.3.8"></a>2022.3.8</h2><p>做学成在线项目工程</p><h2 id="2022-3-9"><a href="#2022-3-9" class="headerlink" title="2022.3.9"></a>2022.3.9</h2><p>总结回顾：css书写：1.定位/浮动/display；2.盒子模型；3.文字属性</p><p><a href="https://imgtu.com/i/bWWZB8"><img src="https://s1.ax1x.com/2022/03/09/bWWZB8.png" alt="bWWZB8.png"></a></p><p>· 定位：<em>如果left和right都有，以left为准；top和bottom都有，以top为准</em></p><p><a href="https://imgtu.com/i/bWW3j0"><img src="https://s1.ax1x.com/2022/03/09/bWW3j0.png" alt="bWW3j0.png"></a></p><p>​    -》》相对定位：①占有原来的位置；②仍然具有标签原有的显示模式特点；③改变位置参照自己原来的位置</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>:relative;</span><br><span class="line"><span class="attribute">left</span>/<span class="attribute">right</span>/<span class="attribute">top</span>/<span class="attribute">bottom</span>:数字px/数字%;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bWWAjP"><img src="https://s1.ax1x.com/2022/03/09/bWWAjP.png" alt="bWWAjP.png"></a></p><p>​    -》》绝对定位：先找到定位的父级，如果有这样的父级就以这个父级为参照物进行定位；有父级，但父级没有定位，以浏览器窗口为参照物进行定位。特点：①脱标不占位置；②改变标签的显示模式特点：具体行内块特点（在一行共存，宽高生效）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>:absolute;</span><br><span class="line"><span class="attribute">left</span>/<span class="attribute">right</span>/<span class="attribute">top</span>/<span class="attribute">bottom</span>:数字px;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bWWVnf"><img src="https://s1.ax1x.com/2022/03/09/bWWVnf.png" alt="bWWVnf.png"></a></p><p><strong>子绝父相：父级相对定位，子级绝对定位</strong></p><p><strong>绝对定位查找父级的方式：就近找定位的父级，如果逐层查找找不到这样的父级，就以浏览器窗口为参照进行定位</strong></p><h2 id="2022-3-10"><a href="#2022-3-10" class="headerlink" title="2022.3.10"></a>2022.3.10</h2><p>· 定位-绝对定位居中：（不能使用margin auto居中）<strong>left：50%，</strong>整个盒子移动到浏览器中间偏右的位置；<strong>margin-left：-150px</strong>，把盒子向左侧移动：自己宽度的一半</p><p>· 定位-位移居中：自己宽度高度的一半.</p><p>​                    <strong>transform:translate(-50%,-50%);</strong></p><p>· 固定定位：①脱标，不占位置</p><p>​                    ②改变位置参考浏览器窗口</p><p>​                    ③具备行内块特点</p><p>​                    ④没有尺寸，也要有内容</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>:fixed;</span><br><span class="line"><span class="attribute">left</span>/<span class="attribute">right</span>/<span class="attribute">top</span>/<span class="attribute">bottom</span>:数字px;</span><br></pre></td></tr></table></figure><p>· 定位-显示图层：默认情况下，定位的盒子，后来者居上；</p><p>​                <strong>z-index:整数；</strong>取值越大，显示顺序越考上，z-index的默认值为0；<em>必须配合定位才生效</em></p><p>· 装饰-垂直对齐方式：浏览器遇到行内和行内块标签当作文字处理，默认文字是按基线对齐。</p><p><a href="https://imgtu.com/i/b4c9u6"><img src="https://s1.ax1x.com/2022/03/10/b4c9u6.png" alt="b4c9u6.png"></a></p><p><strong>①vertical-align:middle;/display:block;转换</strong></p><p><strong>②图片垂直居中：加一个行高再加一个vertical-align:middle;图片水平居中：在前面的基础上加一个text-align:center;</strong></p><p>· 光标类型：</p><p><a href="https://imgtu.com/i/b4cPHO"><img src="https://s1.ax1x.com/2022/03/10/b4cPHO.png" alt="b4cPHO.png"></a></p><p>· 边框圆角：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:<span class="number">4</span>左上 右上 右下 左下;/<span class="number">3</span>左上 右上左下 右下;/<span class="number">2</span>左上右下 右上左下;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/b4cCDK"><img src="https://s1.ax1x.com/2022/03/10/b4cCDK.png" alt="b4cCDK.png"></a></p><p>· 边框圆型（正方形）：取盒子尺寸的一半</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:<span class="number">50%</span>;</span><br></pre></td></tr></table></figure><p>· 胶囊按钮（长方形）：取值是高度的一半</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:高度/<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>· 溢出部分显示效果：auto(根据内容是否超出，判断是否显示滚动条)；scroll：无论内容是否超出都显示滚动条</p><p><a href="https://imgtu.com/i/b46zg1"><img src="https://s1.ax1x.com/2022/03/10/b46zg1.png" alt="b46zg1.png"></a></p><p>· 元素本身隐藏：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">visibility</span>:hidden;占位隐藏，不重要</span><br><span class="line"><span class="attribute">display</span>:none;不占位的隐藏，重要的</span><br></pre></td></tr></table></figure><p>· 元素的整体透明度：</p><p><a href="https://imgtu.com/i/b4cSjx"><img src="https://s1.ax1x.com/2022/03/10/b4cSjx.png" alt="b4cSjx.png"></a></p><p>· 精灵图：</p><p><a href="https://imgtu.com/i/b4cFED"><img src="https://s1.ax1x.com/2022/03/10/b4cFED.png" alt="b4cFED.png"></a></p><p><a href="https://imgtu.com/i/b4cVCd"><img src="https://s1.ax1x.com/2022/03/10/b4cVCd.png" alt="b4cVCd.png"></a></p><p><a href="https://imgtu.com/i/b4cmvt"><img src="https://s1.ax1x.com/2022/03/10/b4cmvt.png" alt="b4cmvt.png"></a></p><p>· 背景图缩放：</p><p><a href="https://imgtu.com/i/b4ckUe"><img src="https://s1.ax1x.com/2022/03/10/b4ckUe.png" alt="b4ckUe.png"></a></p><p><a href="https://imgtu.com/i/b4cA4H"><img src="https://s1.ax1x.com/2022/03/10/b4cA4H.png" alt="b4cA4H.png"></a></p><p>· 盒子阴影：</p><p><a href="https://imgtu.com/i/b4cZ8A"><img src="https://s1.ax1x.com/2022/03/10/b4cZ8A.png" alt="b4cZ8A.png"></a></p><p>· 过渡：都是配合着hover使用，谁变化谁加过度属性；如果变化的属性多，直接写all，表示所有。</p><p><a href="https://imgtu.com/i/b4cuKP"><img src="https://s1.ax1x.com/2022/03/10/b4cuKP.png" alt="b4cuKP.png"></a></p><p>· html骨架：</p><p><a href="https://imgtu.com/i/b4cKDf"><img src="https://s1.ax1x.com/2022/03/10/b4cKDf.png" alt="b4cKDf.png"></a></p><p>· <strong>SEO</strong>:搜素引擎优化；作用：让网站在搜素引擎的排名靠前</p><p>-》》SEO三大标签：title（网页标题标签）、description（网页描述标签）、keywords（网页关键词标签）</p><p>-》》ico图标设置：图标放在根目录里</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;shortcut <span class="attribute">icon</span>&quot; href=&quot;ico图标路径&quot; type=&quot;image/x-<span class="attribute">icon</span>&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="2022-3-11"><a href="#2022-3-11" class="headerlink" title="2022.3.11"></a>2022.3.11</h2><p>小兔鲜儿电商首页项目</p>]]></content>
      
      
      <categories>
          
          <category> html、css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html、css、 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo+Butterfly搭建个人博客教程</title>
      <link href="/2021/12/31/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-1/"/>
      <url>/2021/12/31/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B-1/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><pre><code>发现CSDN复制粘贴太严重了，所以选择自己搭建一个博客，前前后后，断断续续，参照了很多的教程，花了一个月的时间，还有很多不足的地方，后续还会继续改进。</code></pre><h2 id="以下内容视频教程：https-www-bilibili-com-video-BV1mU4y1j72n-share-source-copy-web"><a href="#以下内容视频教程：https-www-bilibili-com-video-BV1mU4y1j72n-share-source-copy-web" class="headerlink" title="以下内容视频教程：https://www.bilibili.com/video/BV1mU4y1j72n?share_source=copy_web"></a>以下内容视频教程：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?share_source=copy_web">https://www.bilibili.com/video/BV1mU4y1j72n?share_source=copy_web</a></h2><h1 id="Node-js安装与环境配置"><a href="#Node-js安装与环境配置" class="headerlink" title="Node.js安装与环境配置"></a>Node.js安装与环境配置</h1><p>相关教程：<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">https://www.cnblogs.com/liuqiyun/p/8133904.html</a><br>关于配置过程出现的问题：<br>    1.win+R 打开cmd管理员命令窗口不可执行，可以点左下角的菜单键，右键后点Windows PowerShell管理员运行。<br>    <a href="https://imgtu.com/i/Txs66P"><img src="https://s4.ax1x.com/2022/01/06/Txs66P.png" alt="Txs66P.png"></a></p><p>2.更改缓存路径失败，可以更改文件夹node_global和文件夹node_cache的用户权限，右键属性，允许所有权限。<br><a href="https://imgtu.com/i/TxscOf"><img src="https://s4.ax1x.com/2022/01/06/TxscOf.png" alt="TxscOf.png"></a><br>3.验证更改缓存路径是否成功命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config get prefix</span><br><span class="line">npm config get cache</span><br></pre></td></tr></table></figure><p>4.配置淘宝镜像，加快下载相关插件速度：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>若配置失败（报错），用以下命令检测：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config get proxy</span><br><span class="line">npm config get https-proxy</span><br></pre></td></tr></table></figure><p>若返回值不为null，则执行以下命令（返回值为null则不用执行）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set proxy null</span><br><span class="line">npm config set https-proxy null</span><br></pre></td></tr></table></figure><p>然后执行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry http://registry.cnpmjs.org/</span><br></pre></td></tr></table></figure><p>再次执行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="Git安装与配置"><a href="#Git安装与配置" class="headerlink" title="Git安装与配置"></a>Git安装与配置</h1><p>相关教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h1 id="Hexo下载"><a href="#Hexo下载" class="headerlink" title="Hexo下载"></a>Hexo下载</h1><p>在Git Bash里输入命令下载：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>然后验证是否下载成功，其输入版本号：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="搭建仓库"><a href="#搭建仓库" class="headerlink" title="搭建仓库"></a>搭建仓库</h1><p>在GitHub上注册，并创建一个空的仓库。</p><p>博客地址：用户名.github.io</p><h1 id="生成SSH-keys"><a href="#生成SSH-keys" class="headerlink" title="生成SSH keys"></a>生成SSH keys</h1><p>打开Git Bush，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;github上绑的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>不管其输出啥，输入四次回车即可。</p><p>然后在C盘-&gt;用户-&gt;A..-&gt;.ssh-&gt;找到一个名为id_rsa.pub文件-&gt;用编译器打开-&gt;复制粘贴到github设置里的SSH密钥里。</p><p>测试是否成功生成：</p><p>在Git Bush里输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>其输出里带你的用户名即成功。</p><h1 id="本地生成博客内容："><a href="#本地生成博客内容：" class="headerlink" title="本地生成博客内容："></a>本地生成博客内容：</h1><p>①在安装目录的同一根目录下新建文件夹，用来存放博客相关文件。</p><p>②打开文件夹，Git Bush输入命令，初始化hexo：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>初始化成功会看到文件夹不为空。</p><p>③常用安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install +安装必备组件命令</span><br></pre></td></tr></table></figure><p>④生成静态网页：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>⑤打开本地服务器预览：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>将<a href="https://localhost:4000/%E5%8F%B3%E9%94%AEcopy%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E9%A2%84%E8%A7%88%E3%80%82%E4%B8%8D%E5%8F%AF%E7%94%A8win%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%89%93%E5%BC%80%E3%80%82">https://localhost:4000/右键copy到浏览器打开预览。不可用win快捷键打开。</a></p><p>⑥安装配置包：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>⑦上传本地文件到GitHub：（需验证个人账号密码）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h1 id="Butterfly美化个人博客："><a href="#Butterfly美化个人博客：" class="headerlink" title="Butterfly美化个人博客："></a>Butterfly美化个人博客：</h1><p>官方教程：<a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><p>相关视频教程：<a href="https://www.bilibili.com/video/BV1aV411p7Bc?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV1aV411p7Bc?spm_id_from=333.999.0.0</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo、GitHub、butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些水题</title>
      <link href="/2021/12/25/%E4%B8%80%E4%BA%9B%E6%B0%B4%E9%A2%98/"/>
      <url>/2021/12/25/%E4%B8%80%E4%BA%9B%E6%B0%B4%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="判断三角形"><a href="#判断三角形" class="headerlink" title="判断三角形"></a>判断三角形</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(a+b&gt;c &amp;&amp; a+c&gt;b &amp;&amp; b+c&gt;a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a==b &amp;&amp; a==c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;等边三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==b ||a==c || b==c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;等腰三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;直角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a==b ||a==c || b==c || a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a)</span><br><span class="line">                &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;等腰直角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;一般三角形\n&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不是三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="埃及数"><a href="#埃及数" class="headerlink" title="埃及数"></a>埃及数</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> a,b,c;</span><br><span class="line"> <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"> <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;/&quot;</span>;</span><br><span class="line"> <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line"> <span class="keyword">if</span>(a==<span class="number">1</span>||b%a==<span class="number">0</span>)</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1/&quot;</span>&lt;&lt;b/a;</span><br><span class="line"> <span class="keyword">while</span>(a!=<span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  c=b/a+<span class="number">1</span>;</span><br><span class="line">  a=a*c-b;</span><br><span class="line">  b=b*c;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1/&quot;</span>&lt;&lt;c;</span><br><span class="line">  <span class="keyword">if</span>(a&gt;<span class="number">1</span>)</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;+&quot;</span>;</span><br><span class="line">  <span class="keyword">if</span>(a==<span class="number">1</span>||b%a==<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1/&quot;</span>&lt;&lt;b/a;</span><br><span class="line">   a=<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数星星"><a href="#数星星" class="headerlink" title="数星星"></a>数星星</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,c=<span class="number">1</span>,count;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">       <span class="keyword">if</span>(c &gt; <span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;   <span class="comment">//相邻两行之间输出一个空行</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;m;     <span class="comment">//输入没次输入的单词数</span></span><br><span class="line">        count = <span class="number">0</span>;      <span class="comment">//计数器，记录输入了多少个star</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">            <span class="keyword">if</span>(str == <span class="string">&quot;star&quot;</span>) count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case&quot;</span>&lt;&lt;c++&lt;&lt;<span class="string">&quot;:This list contains &quot;</span>&lt;&lt;count&lt;&lt;<span class="string">&quot; star.&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/16/hello-world/"/>
      <url>/2021/12/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
